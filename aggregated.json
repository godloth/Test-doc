{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API Gateway",
    "description": "This swagger file was aggregated using swagger-aggregator!"
  },
  "basePath": "/v2",
  "tags": [],
  "paths": {
    "/": {
      "get": {
        "description": "Return all events for filtering parameters",
        "operationId": "searchBy",
        "parameters": [
          {
            "name": "platformId",
            "in": "query",
            "description": "platform id",
            "required": false,
            "type": "string"
          },
          {
            "name": "visitorId",
            "in": "query",
            "description": "visitor id",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit of events per page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30,
            "maximum": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of events to skip for pagination",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessful operation",
            "schema": {
              "$ref": "#/definitions/SearchResponse"
            }
          },
          "400": {
            "$ref": "#/responses/e400"
          },
          "503": {
            "$ref": "#/responses/e503"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "Get event payload by event id",
        "operationId": "getEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "event id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessful operation",
            "schema": {
              "$ref": "#/definitions/EventResponse"
            }
          },
          "400": {
            "$ref": "#/responses/e400"
          },
          "503": {
            "$ref": "#/responses/e503"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/{id}/billingaddress": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "Update Billing Address",
        "parameters": [
          {
            "$ref": "#/parameters/idParam"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "streetAddress": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string",
                  "format": "^/([ABCEGHJKLMNPRSTVXY]\\d)([ABCEGHJKLMNPRSTVWXYZ]\\d){2}/$"
                },
                "region": {
                  "type": "string",
                  "description": "The region (aka the province), two-letter ISO 3166-2:CA (uppercase)",
                  "enum": [
                    "AB",
                    "BC",
                    "MB",
                    "NB",
                    "NL",
                    "NT",
                    "NS",
                    "NU",
                    "ON",
                    "PE",
                    "QC",
                    "SK",
                    "YT"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/billingInfoResponse"
            }
          },
          "404": {
            "description": "Not found"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{id}/convertToCustomer": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "Convert to active customer",
        "parameters": [
          {
            "$ref": "#/parameters/idParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean",
                  "description": "true if is a valid response. "
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "ypStoreCustomer": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "required": [
                "result",
                "data"
              ]
            }
          },
          "404": {
            "description": "Not found"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/health"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/validate": {
      "get": {
        "description": "\nCheck the validity of an address\n\nThe first step is normalization. In this step, various business rules to standardize the format of address components and to extract additional information where gaps exist are applied.\n\nThere are many business rules to standardize parts of an address.\n\nA few examples are:\n\n- converting letters with accents to their unaccented forms\n- inserting spaces between words in CamelCase\n- standardizing addresses that come in a specific format from telcos\n- attempting to fill in missing information using other available data, for example filling in a missing province and city name from a phone number\n- removing special characters and excess white space\n- normalizing city names, meaning converting many different variations of a city name to one standard representation\n\nThe second step is geocoding.\n\nBasically it calls TomTom to geolocalized the address.\nTomtom answers a corrected address with a level of confidence. If is is high enough then the corrected address is returned by the service.\n\n\n##### Validate an address\n```\ncurl \"http://localhost:7014/validate?streetAddress=3180+rue+masson&municipality=Montreal&province=QC&postalCode=H1Y1Y1&telephone=514-508-1615\"\n{\n   \"result\":true,\n   \"data\":{[\n      \"address\":\"3180 Rue Masson, Rosemont-Petite-Patrie, Montréal, Québec H1Y, CA\"\n      ]\n   }\n}\n```\n\nPlease note that if an empty addresses array is returned it only means that validation could not be achieved, but it does *not* mean that the address is invalid,\nbecause external services used for validations are not 100% complete (recent addresses can be missing).\n\nHence if an address is returned it can be used instead of the requested one, because it has been normalized and geocoded. But if none is returned then the requested address should be kept.\n\n##### Healthcheck\n```\ncurl \"http://localhost:7014/health\"\n{\"status\":200,\"addressDataSource\":\"ok\"}\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "businessName",
            "in": "query",
            "description": "The business name if any",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "The country of the address",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainLine",
            "in": "query",
            "description": "The mainLine telephone number for the address",
            "required": false,
            "type": "string"
          },
          {
            "name": "municipality",
            "in": "query",
            "description": "Name of the city",
            "required": false,
            "type": "string"
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "The postalCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "province",
            "in": "query",
            "description": "Name or code of the province",
            "required": false,
            "type": "string"
          },
          {
            "name": "streetAddress",
            "in": "query",
            "description": "The street address",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "details": [
                    {
                      "address": "3180 Rue Masson, Rosemont-Petite-Patrie, Montréal, Québec H1Y 1Y1, CA"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/addresses"
            }
          }
        }
      }
    },
    "/inventoryproduct/{udac}": {
      "get": {
        "description": "##### Get product inventory availability\n```\ncurl -X GET localhost:7000/inventoryproduct/SP?source=marketplace&username=remi&directoryCode=00701&headingCode=01125710&targetDate=2016-12-01 -H \"Content-type: application/json\"\n\n< HTTP/1.1 200 OK\n\n{\n  \"result\": true,\n  \"data\": {\n    \"udac\":  SP\n    \"headingCode\": 01125710,\n    \"availableList\": [\"2016-12-01-05:00\",\"2016-12-01-05:00\",\"2017-01-01-05:00\"],\n    \"frorList\": [\"2016-12-01-05:00\"]\n    \"reservationList\": [\"2017-01-01-05:00\"]\n  }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/udac"
          },
          {
            "$ref": "#/parameters/source"
          },
          {
            "$ref": "#/parameters/username"
          },
          {
            "$ref": "#/parameters/directoryCode"
          },
          {
            "$ref": "#/parameters/headingCode"
          },
          {
            "$ref": "#/parameters/targetDate"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "udac": {
                      "type": "string",
                      "description": "UDAC of the inventory product"
                    },
                    "directoryCode": {
                      "type": "string",
                      "description": "Directory code (e.g., 01900). Values can be found in referential"
                    },
                    "headingCode": {
                      "type": "string",
                      "description": "Heading code (e.g., 01125400). Values can be found in referential"
                    },
                    "availableList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Starting dates that the products become available"
                    },
                    "frorList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "First right of refusal list"
                    },
                    "reservationList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of reservations already made"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            },
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    "500"
                  ],
                  "details": [
                    {
                      "code": "500",
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/inventoryproduct/{udac}/reservation": {
      "post": {
        "description": "##### Reserve a product\n```\ncat reserveprod.json\n\n{\n  \"username\": \"test\",\n  \"directoryCode\": \"01900\",\n  \"headingCode\": \"01125400\",\n  \"requestedDate\": \"2017-02-01\",\n  \"forceDate\": false\n}\n\ncurl -X POST http://localhost:7000/inventoryproduct/GSP/reservation/ -d @ reserveprod.json -H 'Content-type: application/json'\n\n{\n  \"result\": true,\n  \"data\": {\n      \"resultCode\": \"0\",\n      \"message\": \"Reservation successful.\",\n      \"reservationCode\": \"1110818\",\n      \"expirationDate\": \"2017-01-31T19:57:38.507Z\",\n      \"nowDate\": \"2017-01-26T19:57:38.603Z\",\n      \"effectiveStartDate\": \"2017-03-01T00:00:00.000Z\",\n      \"effectiveEndDate\": \"2018-02-28T00:00:00.000Z\",\n      \"contractTerm\": 12\n  }\n}\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/udac"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "JSON payload used to make a product reservation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reserveRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product successfully reserved",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "resultCode": {
                      "type": "integer",
                      "description": "Result code from AC"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message from AC"
                    },
                    "reservationCode": {
                      "type": "string",
                      "description": "The reservation number from AC when the reservation is successfully made"
                    },
                    "expirationDate": {
                      "type": "string",
                      "description": "Date and time that this reservation expires (if not confirmed)"
                    },
                    "effectiveStartDate": {
                      "type": "string",
                      "description": "Start date"
                    },
                    "effectiveEndDate": {
                      "type": "string",
                      "description": "End date"
                    },
                    "contractTerm": {
                      "type": "integer",
                      "maximum": 12,
                      "description": "The length of the contract in months"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            },
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    "1"
                  ],
                  "details": [
                    {
                      "code": "1",
                      "message": "Product not found"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            },
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    "500"
                  ],
                  "details": [
                    {
                      "code": "500",
                      "message": "Internal Server Error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/inventoryproduct/{udac}/reservation/{reservationCode}/confirm": {
      "post": {
        "description": "##### Confirm a Reservation\n```\ncat body.json\n\n{\n  \"username\": \"klaurin\",\n  \"directoryCode\": \"00701\",\n  \"headingCode\": \"01125710\",\n  \"requestedDate\": \"2016-12-01\"\n}\n\ncurl -X POST localhost:7000/inventoryproduct/GSP/reservation/966871/confirm -d @body.json  -H \"Content-type: application/json\"\n\n< HTTP/1.1 201 Created\n\n{\n  \"result\": true,\n  \"data\": {\n    \"resultCode\": \"4\",\n    \"message\": \"Product found, sale confirmation and First Right of Refusal reservation successful.\",\n    \"frorReservationCode\": \"966872\",\n    \"frorExpirationDate\": \"2017-11-12T20:00:00.000Z\"\n  }\n}\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/udac"
          },
          {
            "$ref": "#/parameters/reservationCode"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "JSON payload used to help identify the reservation",
            "schema": {
              "$ref": "#/definitions/reservationInPlace"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product sale confirmed",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "resultCode": {
                      "type": "integer",
                      "description": "Result code from AC"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message from AC"
                    },
                    "frorReservationCode": {
                      "type": "string",
                      "description": "First Right of Refusal reservation code"
                    },
                    "frorExpirationDate": {
                      "type": "string",
                      "description": "First Right of Refusal expiry date"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/inventoryproduct/{udac}/reservation/{reservationCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/udac"
        },
        {
          "$ref": "#/parameters/reservationCode"
        }
      ],
      "get": {
        "description": "##### Get the product reservation information\n```\ncurl https://dev-api.ypcloud.io/inventory/inventoryproduct/GSP/reservation/1110818?username=test&directoryCode=01900&headingCode=01125400&requestedDate=2017-02-01\n\n< HTTP/1.1 200\n\n{\n  \"result\": true,\n  \"data\": {\n      \"resultCode\": \"0\",\n      \"message\": \"Product and reservation found, reservation code correct.\",\n      \"effectiveStartDate\": \"2017-03-01T00:00:00.000Z\",\n      \"effectiveEndDate\": \"2018-02-28T00:00:00.000Z\",\n      \"contractTerm\": 12\n  }\n}\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "JSON payload used to help validate the reservation number",
            "schema": {
              "$ref": "#/definitions/reservationInPlace"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "resultCode": {
                      "type": "integer",
                      "description": "result code from AC"
                    },
                    "message": {
                      "type": "string",
                      "description": "message from AC"
                    },
                    "effectiveStartDate": {
                      "type": "string",
                      "description": "Start date"
                    },
                    "effectiveEndDate": {
                      "type": "string",
                      "description": "End date"
                    },
                    "contractTerm": {
                      "type": "integer",
                      "description": "The length of the contract in months (e.g., 12 means 12 months)"
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "resultCode": "0",
                  "message": "Product and reservation found, reservation code correct",
                  "reservationCode": "1110807",
                  "effectiveStartDate": "2017-02-01T00:00:00.000Z",
                  "effectiveEndDate": "2018-01-31T00:00:00.000Z",
                  "contractTerm": 12
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Cancel the product reservation",
        "parameters": [
          {
            "$ref": "#/parameters/username"
          },
          {
            "$ref": "#/parameters/directoryCode"
          },
          {
            "$ref": "#/parameters/headingCode"
          },
          {
            "$ref": "#/parameters/accountNumber"
          },
          {
            "$ref": "#/parameters/cmrNumber"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "description": "##### Submit an order to CF\n\n###### GSP order submission\n\n``````\ncat submitOrder-gsp.json\n{\n  \"order\": {\n    \"orderNumber\": \"order-gsp-sample-demo\",\n    \"accountId\": \"587fd59d40aeb2ae5478f4aa\",\n    \"representantLogin\": \"lucieDuprat1\",\n    \"price\" : \"51800\",\n    \"products\": [\n      {\n        \"productCode\": \"GSP\",\n        \"price\" : \"51800\",\n        \"configuration\": {\n          \"merchantId\": \"123456\",\n          \"headingCode\": \"00061350\",\n          \"directoryCode\": \"00701\",\n          \"duration\" : 12,\n          \"startDate\" : \"2017-02-05\",\n          \"externalReservationNumber\" : \"154454\"\n        }\n      }\n    ]\n  }\n}\n\ncurl http://localhost:7002/orders -d @submitOrder-gsp.json  -H 'Content-type: application/json'\n\n{\n  \"result\": true,\n  \"data\": {\n    \"orderNumber\": \"order-gsp-sample-demo\",\n    \"price\": \"51800\",\n    \"accountId\": \"587fd59d40aeb2ae5478f4aa\",\n    \"representantLogin\" : \"lucieDuprat1\",\n    \"account\": {\n      \"servicingAccountId\": \"1-G8V-2424\",\n      \"contactId\": \"1-AUQSNJ\",\n      \"email\": \"fivestarlimo@shaw.ca\",\n      \"phoneNum\": \"2504723500\",\n      \"id\": \"587fd59d40aeb2ae5478f4aa\"\n    },\n    \"products\": [\n      {\n        \"productCode\": \"GSP\",\n        \"price\": \"51800\",\n        \"configuration\": {\n          \"merchantId\": \"123456\",\n          \"headingCode\": \"00061350\",\n          \"directoryCode\": \"00701\",\n          \"duration\": 12,\n          \"startDate\": \"2017-02-05\",\n          \"externalReservationNumber\": \"154454\"\n        }\n      }\n    ]\n  }\n}\n``````\n\n###### NetSync order submission\n\n``````\ncat submitOrder.json\n{\n  \"order\": {\n    \"orderNumber\": \"order-netsync-sample\",\n    \"accountId\": \"585036d263b231c208f14af6\",\n    \"representantLogin\": \"lucieDuprat1\",\n    \"price\" : \"5000\",\n    \"products\": [\n      {\n        \"productCode\": \"PRESC\",\n        \"price\" : \"5000\",\n        \"configuration\": {\n          \"merchantId\": \"123456\",\n          \"headingCode\": \"00061350\",\n          \"directoryCode\": \"00701\",\n          \"startDate\" : \"2017-01-05\"\n        }\n      }\n    ]\n  }\n}\n\n\ncurl http://localhost:7002/orders -d @submitOrder.json  -H 'Content-type: application/json'\n\n{\n  \"result\": true,\n  \"data\": {\n    \"status\": \"pending\",\n    \"order\": {\n      \"orderNumber\": \"testremi 1615\",\n      \"accountId\": \"585036d263b231c208f14aea\",\n      \"representantLogin\": \"lucieDuprat1\",\n      \"products\": [\n        {\n          \"productCode\": \"WEBE\",\n          \"configuration\": {\n            \"merchantId\" : \"123456\",\n            \"headingCode\": \"00061350\",\n            \"directoryCode\": \"00701\"\n          }\n        }\n      ]\n    },\n    \"attempts\": [\n\n    ],\n    \"created\": \"2016-12-16T10:37:33.378Z\",\n    \"busy\": false\n  }\n}\n\n``````\n\n###### One-Page Website order submission\n\n``````\ncat submitOrder-oweb.json\n{\n  \"order\": {\n    \"orderNumber\": \"order-owebe-sample\",\n    \"accountId\": \"587d3595c58f2f5bc803fe7b\",\n    \"representantLogin\": \"lucieDuprat1\",\n    \"price\" : \"2500\",\n    \"products\": [\n      {\n        \"productCode\": \"OWEBE\",\n        \"price\" : \"2500\",\n        \"configuration\": {\n          \"merchantId\": \"123456\",\n          \"headingCode\": \"00061350\",\n          \"directoryCode\": \"00701\",\n          \"duration\" : 12,\n          \"startDate\" : \"2017-02-05\",\n          \"specialCustomization\" : \"my special customization\"\n        }\n      }\n    ]\n  }\n}\n\ncurl http://localhost:7002/orders -d @submitOrder-oweb.json  -H 'Content-type: application/json'\n\n{\n   \"result\":true,\n   \"data\":{\n      \"orderNumber\":\"order-owebe-sample\",\n      \"price\":\"2500\",\n      \"accountId\":\"587d3595c58f2f5bc803fe7b\",\n      \"representantLogin\": \"lucieDuprat1\",\n      \"account\":{\n         \"listingId\":\"ListingIdFromOneProfile\",\n         \"servicingAccountId\":\"1-PXJM-499\",\n         \"contactId\":\"1-LMBWOZ\",\n         \"email\":\"bad126093@yp.ca\",\n         \"phoneNum\":\"8193992134\",\n         \"id\":\"587d3595c58f2f5bc803fe7b\"\n      },\n      \"products\":[\n         {\n            \"productCode\":\"OWEBE\",\n            \"price\":\"2500\",\n            \"configuration\":{\n               \"merchantId\": \"123456\",\n               \"headingCode\":\"00061350\",\n               \"directoryCode\":\"00701\",\n               \"duration\":12,\n               \"startDate\":\"2017-02-05\",\n               \"specialCustomization\" : \"my special customization\"\n            }\n         }\n      ]\n   }\n}\n``````\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "description": "Order to submit",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "$ref": "#/definitions/orderToSubmit"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "title": "Order",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "order": {
                      "$ref": "#/definitions/orderFull"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderNumber}": {
      "parameters": [
        {
          "name": "orderNumber",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "description": "##### Get a submitted order by the order number\n\n```\ncurl http://localhost:7002/orders/order-netsync-\n\n{\n   \"result\":true,\n   \"data\":{\n      \"_id\":\"585d2a86eee44c211407cb23\",\n      \"orderNumber\":\"order-netsync-sample\",\n      \"price\":\"5000\",\n      \"accountId\":\"585036d263b231c208f14af6\",\n      \"representantLogin\": \"lucieDuprat1\",\n      \"__v\":0,\n      \"account\":{\n         \"id\":\"585036d263b231c208f14af6\",\n         \"phoneNum\":\"4038136356\",\n         \"email\":\"joelglasser79@gmail.com\",\n         \"contactId\":\"ContactIdFromOneProfile\",\n         \"servicingAccountId\":\"ServicingIdFromOneProfile\"\n      },\n      \"products\":[\n         {\n            \"productCode\":\"PRESC\",\n            \"price\":\"5000\",\n            \"configuration\":{\n               \"merchantId\": \"123456\",\n               \"headingCode\":\"00061350\",\n               \"directoryCode\":\"00701\",\n               \"startDate\":\"2017-01-05\"\n            },\n            \"_id\":\"585d2a86eee44c211407cb24\"\n         }\n      ]\n   }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Order submitted",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "order": {
                      "$ref": "#/definitions/orderFull"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "description": "##### Retrieve a job by order number and/or status\n```\ncurl http://localhost:7002/jobs?orderNumber=testremi%201615&status=sentToCF\n\n[\n  {\n    \"result\":true,\n    \"data\":{\n      \"id\":\"585d2a86eee44c211407cb25\",\n      \"busy\":true,\n      \"created\":\"2016-12-23T13:45:42.723Z\",\n      \"availableForProcess\":\"2016-12-23T13:45:42.723Z\",\n      \"attempts\":[\n         {\n            \"statusFrom\":\"pending\",\n            \"statusTo\":\"sentToCF\",\n            \"timestamp\":\"2016-12-23T14:04:01.013Z\"\n         }\n      ],\n      \"status\":\"sentToCF\"\n    }\n  }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderNumber",
            "in": "query",
            "description": "The order number associated with the job",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The current status of the job",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The page size when use pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of jobs to skip when use pagination",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/job"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "description": "##### Retrieve a job by its id\n```\ncurl http://localhost:7002/jobs/585d2a86eee44c211407cb25\n\n\n{\n   \"result\":true,\n   \"data\":{\n      \"id\":\"585d2a86eee44c211407cb25\",\n      \"busy\":true,\n      \"created\":\"2016-12-23T13:45:42.723Z\",\n      \"availableForProcess\":\"2016-12-23T13:45:42.723Z\",\n      \"attempts\":[\n         {\n            \"statusFrom\":\"pending\",\n            \"statusTo\":\"sentToCF\",\n            \"timestamp\":\"2016-12-23T14:04:01.013Z\"\n         }\n      ],\n      \"status\":\"pending\"\n   }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/definitions/job"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "##### Update a job that has already been created\n```\ncat updateJob.json\n{\n  \"job\": {\n      \"id\":\"585d2a86eee44c211407cb25\",\n      \"busy\":true,\n      \"availableForProcess\":\"2016-12-23T13:45:42.723Z\",\n      \"attempts\":[\n         {\n            \"statusFrom\":\"pending\",\n            \"statusTo\":\"sentToCF\",\n            \"timestamp\":\"2016-12-23T14:04:01.013Z\"\n         }\n      ],\n      \"status\":\"pending\"\n  }\n}\ncurl http://localhost:7002/orders/585d2a86eee44c211407cb25 -X PUT -d @updateJob.json  -H 'Content-type: application/json'\n\n{\n  \"result\": true,\n  \"data\": {\n      \"id\":\"585d2a86eee44c211407cb25\",\n      \"busy\":true,\n      \"created\":\"2016-12-23T13:45:42.723Z\",\n      \"availableForProcess\":\"2016-12-23T13:45:42.723Z\",\n      \"attempts\":[\n         {\n            \"statusFrom\":\"pending\",\n            \"statusTo\":\"sentToCF\",\n            \"timestamp\":\"2016-12-23T14:04:01.013Z\"\n         }\n      ],\n      \"status\":\"pending\"\n  }\n}\n```\n",
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "job": {
                  "$ref": "#/definitions/job"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/definitions/job"
                }
              }
            }
          }
        }
      }
    },
    "/find-or-create-mid": {
      "post": {
        "description": "Find or create MID",
        "parameters": [
          {
            "name": "nap",
            "in": "body",
            "description": "The JSON containing the nap",
            "schema": {
              "$ref": "#/definitions/NAP"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The service has either created or found an MID\n",
            "schema": {
              "$ref": "#/definitions/FindOrCreateMIDResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payments": {
      "post": {
        "description": "Process a payment\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Payment information",
            "schema": {
              "$ref": "#/definitions/payment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Payment id"
                    },
                    "amount": {
                      "type": "string",
                      "description": "The dollar amount of the payment"
                    },
                    "confirmation": {
                      "type": "string",
                      "description": "The confirmation message from payment driver"
                    },
                    "cardNumber": {
                      "type": "string",
                      "description": "The last 4 digit of the credit card number. All other digits are masked with stars (i.e., *)"
                    },
                    "expiry": {
                      "type": "string",
                      "description": "Card expiry in the format of MMYY"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "merchantName": {
                      "type": "string"
                    },
                    "paymentStatus": {
                      "type": "string",
                      "enum": [
                        "approved",
                        "rejected"
                      ]
                    },
                    "responseCode": {
                      "type": "string",
                      "description": "The response code from the payment driver"
                    },
                    "responseMessage": {
                      "type": "string",
                      "description": "The message associated with the response code"
                    },
                    "terminalId": {
                      "type": "string",
                      "description": "The id of the terminal where the payment was processed"
                    },
                    "transactionDate": {
                      "type": "string",
                      "description": "Date of the payment in the format of yyyy-mm-dd"
                    },
                    "transactionType": {
                      "type": "string",
                      "description": "Type of the transaciton, e.g., Purchase, Pre-authorization, etc."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    500
                  ],
                  "details": [
                    {
                      "code": 500,
                      "message": "Internal Error"
                    }
                  ]
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{templateName}": {
      "post": {
        "description": "##### Generate a PDF document defined by the template\n\nExample: Generating a contract PDF\n\ncat contract.json\n```\n{\n  \"date\": \"May 26, 2016\",\n  \"salesRep\": {\n    \"name\": \"Arvind Saxena\",\n    \"title\": \"Senior Manager Client Relationship\",\n    \"address\": \"325 Milner Ave Scar\",\n    \"email\": \"arvind.saxena@yp.ca\",\n    \"phones\": [\n      {\n        \"type\": \"Office\",\n        \"number\": \"905­728­6437\"\n      },\n      {\n        \"type\": \"Toll free\",\n        \"number\": \"1­866­279­2845\"\n      },\n      {\n        \"type\": \"Fax\",\n        \"number\": \"1­877­440­7803\"\n      }\n    ]\n  },\n  \"customer\": {\n    \"name\": \"Paint Colours Unlimited\",\n    \"address\": {\n      \"civicNo\": \"1234\",\n      \"street\": \"Adelaide ST W\",\n      \"city\": \"Toronto\",\n      \"province\": \"ON\",\n      \"postalCode\": \"M5V 1T2\"\n    },\n    \"phone\": \"4167035500\",\n    \"contact\": {\n      \"name\": \"Lucille Jeniole\",\n      \"email\": \"acct@paintcoloursunlimited.ca\"\n    }\n  },\n  \"services\": [\n    {\n      \"directoryCode\": \"70001\",\n      \"directoryName\": \"One Toronto­ North\",\n      \"province\": \"ON\",\n      \"merchants\": [\n        {\n          \"name\": \"Green Page Paints\",\n          \"address\": {\n            \"civicNo\": \"502\",\n            \"street\": \"Adelaide ST W\",\n            \"city\": \"Toronto\",\n            \"province\": \"ON\",\n            \"postalCode\": \"M5V 1T2\"\n          },\n          \"phones\": [\n            {\n              \"type\": \"Main\",\n              \"number\": \"905­728­6437\"\n            },\n            {\n              \"number\": \"1­877­440­7803\"\n            }\n          ],\n          \"website\": \"www.greenpagepaints.ca\",\n          \"headings\": [\n            {\n              \"name\": {\n                \"fr\": \"Magasins de peinture\",\n                \"en\": \"Paint Store\"\n              },\n              \"products\": [\n                {\n                  \"udac\": \"BOOST2\",\n                  \"description\": \"Digital Bundle with NetSync Plus Level 2\",\n                  \"startDate\": \"August 1st, 2016\",\n                  \"term\": \"12 mths\",\n                  \"price\": \"123.45\",\n                  \"bundled\": [\n                    {\n                      \"udac\": \"L1\",\n                      \"description\": \"Local Leader: Online Positioning Product with Logo\"\n                    },\n                    {\n                      \"udac\": \"MOL\",\n                      \"description\": \"Mobile Placement Leader\"\n                    },\n                    {\n                      \"udac\": \"PRESB\",\n                      \"description\": \"NetSync Plus\"\n                    }\n                  ]\n                },\n                {\n                  \"udac\": \"GSP\",\n                  \"description\": \"Guaranteed Sponsored Placement - Top 3 - Online Positioning with Logo, with Call Tracking\",\n                  \"startDate\": \"July 1st, 2017\",\n                  \"term\": \"6 mths\",\n                  \"price\": \"456.78\",\n                  \"configuration\": [\n                    {\n                      \"name\": \"Promo. Text\",\n                      \"content\": \"This is the greatest paint ever\"\n                    },\n                    {\n                      \"name\": \"URL Link\",\n                      \"content\": \"http://www.allcolourpaints.ca\"\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              \"name\": {\n                \"fr\": \"Restaurants thailandais\",\n                \"en\": \"Thai Restaurants\"\n              },\n              \"products\": [\n                {\n                  \"udac\": \"OWEBF\",\n                  \"description\": \"Website Basic - French\",\n                  \"startDate\": \"May 1st, 2017\",\n                  \"term\": \"12 mths\",\n                  \"price\": \"25.00\"\n                },\n                {\n                  \"udac\": \"WEBDSNB\",\n                  \"description\": \"Website - Design fee\",\n                  \"startDate\": \"May 1st, 2017\",\n                  \"term\": \"12 mths\",\n                  \"price\": \"55.00\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"Yellow Page Paints\",\n          \"address\": {\n            \"civicNo\": \"1234\",\n            \"street\": \"King Stree East\",\n            \"city\": \"Toronto\",\n            \"province\": \"ON\",\n            \"postalCode\": \"M5V 1B3\"\n          },\n          \"phones\": [\n            {\n              \"number\": \"1­877­440­7803\"\n            }\n          ],\n          \"website\": \"www.yellowpagepaints.ca\",\n          \"headings\": [\n            {\n              \"name\": {\n                \"fr\": \"Magasins de peinture\",\n                \"en\": \"Paint Store\"\n              },\n              \"products\": [\n                {\n                  \"udac\": \"GSP\",\n                  \"description\": \"Guaranteed Sponsored Placement - Top 3 - Online Positioning with Logo, with Call Tracking\",\n                  \"startDate\": \"July 1st, 2017\",\n                  \"term\": \"6 mths\",\n                  \"price\": \"456.78\",\n                  \"configuration\": [\n                    {\n                      \"name\": \"Promo. Text\",\n                      \"content\": \"This is the greatest paint ever\"\n                    },\n                    {\n                      \"name\": \"URL Link\",\n                      \"content\": \"http://www.greatestpaint.ca\"\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              \"name\": {\n                \"fr\": \"Ramonage de cheminées\",\n                \"en\": \"Chimney Cleaning & Sweeping\"\n              },\n              \"products\": [\n                {\n                  \"udac\": \"SP\",\n                  \"description\": \"Sponsored Placement - Online Positioning with Logo, with Call Tracking\",\n                  \"startDate\": \"June 1st, 2017\",\n                  \"term\": \"12 mths\",\n                  \"price\": \"367.00\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"directoryCode\": \"MJAW\",\n      \"directoryName\": \"Moose Jaw ­ Non-Print Directory\",\n      \"province\": \"SK\",\n      \"merchants\": [\n        {\n          \"name\": \"Blue Page Paints\",\n          \"address\": {\n            \"civicNo\": \"2250\",\n            \"street\": \"Stone Creek PI\",\n            \"city\": \"Sooke\",\n            \"province\": \"BC\",\n            \"postalCode\": \"V9Z 1J78\"\n          },\n          \"phones\": [\n            {\n              \"type\": \"Main\",\n              \"number\": \"250-888-5636\"\n            }\n          ],\n          \"website\": \"www.bluepagepaints.ca\",\n          \"headings\": [\n            {\n              \"name\": {\n                \"fr\": \"Rôtisseries et restaurants de poulet\",\n                \"en\": \"Rotisseries & Chicken Restaurants\"\n              },\n              \"products\": [\n                {\n                  \"udac\": \"OWEBE\",\n                  \"description\": \"Website Basic - English\",\n                  \"startDate\": \"April 1st, 2017\",\n                  \"term\": \"12 mths\",\n                  \"price\": \"25.00\"\n                },\n                {\n                  \"udac\": \"BOOST1\",\n                  \"description\": \"Digital Bundle with NetSync Plus Level 1, with Call Tracking\",\n                  \"startDate\": \"July 1st, 2017\",\n                  \"term\": \"6 mths\",\n                  \"price\": \"75.00\",\n                  \"bundled\": [\n                    {\n                      \"udac\": \"MOL\",\n                      \"description\": \"Mobile Placement Leader\"\n                    },\n                    {\n                      \"udac\": \"LO\",\n                      \"description\": \"Local Presence\"\n                    },\n                    {\n                      \"udac\": \"PRESB\",\n                      \"description\": \"NetSync Plus\"\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              \"name\": {\n                \"fr\": \"Restaurants thailandais\",\n                \"en\": \"Thai Restaurants\"\n              },\n              \"products\": [\n                {\n                  \"udac\": \"OWEBF\",\n                  \"description\": \"Website Basic - French\",\n                  \"startDate\": \"May 1st, 2017\",\n                  \"term\": \"12 mths\",\n                  \"price\": \"25.00\"\n                },\n                {\n                  \"udac\": \"WEBDSNB\",\n                  \"description\": \"Website - Design fee\",\n                  \"startDate\": \"May 1st, 2017\",\n                  \"term\": \"12 mths\",\n                  \"price\": \"55.00\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"directoryCode\": false,\n      \"merchants\": [\n        {\n          \"name\": \"Santa Claus\",\n          \"address\": {\n            \"civicNo\": \"1234\",\n            \"street\": \"34e\",\n            \"city\": \"North Pole\",\n            \"province\": \"NU\",\n            \"postalCode\": \"H0H 0H0\"\n          },\n          \"phones\": [\n            {\n              \"type\": \"Main\",\n              \"number\": \"888-888-8888\"\n            }\n          ],\n          \"website\": \"www.christmas.ca\",\n          \"headings\": [\n            {\n              \"name\": {\n                \"fr\": \"Jouets / Magie\",\n                \"en\": \"Toys / Magic\"\n              },\n              \"products\": [\n                {\n                  \"udac\": \"OWEBE\",\n                  \"description\": \"Website Basic - English\",\n                  \"startDate\": \"April 1st, 2017\",\n                  \"term\": \"12 mths\",\n                  \"price\": \"25.00\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"total\": \"123.00\",\n  \"cfProposalNumber\": \"1-2THG2WY\",\n  \"rptId\": \"RPT-1-2THG2W-WL14Ø14Ø-ØØØ7aØ1\"\n}\n```\n\ncurl -X POST localhost:7015/contract -d @contract.json -H \"Content-type: application/json\"\n",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateName",
            "in": "path",
            "description": "The name of the template to be used to generate the PDF document",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "The JSON object that contains data to be fed into the template",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "title": "Response",
              "type": "file"
            }
          },
          "404": {
            "description": "Template not found",
            "schema": {
              "title": "Not Found",
              "type": "object"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "title": "Internal Server Error",
              "type": "object"
            }
          }
        }
      }
    },
    "/quotes": {
      "post": {
        "description": "##### Retrieve price information of a list of products (each associated with a specific date, heading code, directory code, and contract length in the number of months), subtotals, and totals\n\n###### Retrieve price information for a list of products\n```\ncat priceInfoListProducts.json\n\n{\n  \"products\": [{\n    \"udac\": \"L0\",\n    \"directoryCode\": \"00701\",\n    \"headingCode\": \"0061350\",\n    \"startDate\": \"2017-02-01\",\n    \"contractLength\": 6\n  }, {\n    \"udac\": \"GSP\",\n    \"directoryCode\": \"00701\",\n    \"headingCode\": \"0061350\",\n    \"startDate\": \"2017-02-01\",\n    \"contractLength\": 12\n  }, {\n    \"udac\": \"SP\",\n    \"directoryCode\": \"00701\",\n    \"headingCode\": \"0061350\",\n    \"startDate\": \"2017-02-01\",\n    \"contractLength\": 12\n  }]\n}\n\ncurl http://localhost:7009/quotes -d @priceInfoListProducts.json  -H 'Content-type: application/json'\n\n{\n  \"result\": true,\n  \"data\": {\n    \"products\": [{\n      \"udac\": \"L0\",\n      \"directoryCode\": \"00701\",\n      \"headingCode\": \"0061350\",\n      \"startDate\": \"2017-02-01\",\n      \"contractLength\": 6,\n      \"unitPrices\": {\n        \"basePrice\": 30.9,\n        \"discountedPrice\": 30.9\n      },\n      \"subtotals\": {\n        \"basePrice\": 185.4,\n        \"discountedPrice\": 185.4\n      }\n    }, {\n      \"udac\": \"GSP\",\n      \"directoryCode\": \"00701\",\n      \"headingCode\": \"0061350\",\n      \"startDate\": \"2017-02-01\",\n      \"contractLength\": 12,\n      \"unitPrices\": {\n        \"basePrice\": 643.65,\n        \"discountedPrice\": 643.65\n      },\n      \"subtotals\": {\n        \"basePrice\": 7723.8,\n        \"discountedPrice\": 7723.8\n      }\n    }, {\n      \"udac\": \"SP\",\n      \"directoryCode\": \"00701\",\n      \"headingCode\": \"0061350\",\n      \"startDate\": \"2017-02-01\",\n      \"contractLength\": 12,\n      \"unitPrices\": {\n        \"basePrice\": 243.1,\n        \"discountedPrice\": 243.1\n      },\n      \"subtotals\": {\n        \"basePrice\": 2917.2,\n        \"discountedPrice\": 2917.2\n      }\n    }],\n    \"totals\": {\n      \"basePrice\": 10826.4,\n      \"discountedPrice\": 10826.4\n    }\n  }\n}\n```\n###### Error Codes\n\nCode | Description | Condition\n------------ | ------------- | -------------\n422.100 | UDAC is missing | UDAC tag is missing or empty\n422.101 | UDAC is invalid | UDAC tag text is not recognized as a valid UDAC in the reference database\n422.110 | Directory Code is missing | DirectoryCode tag is missing or empty\n422.111 | Directory Code is invalid | DirectoryCode tag text is not recognized as a valid directory code in the reference database\n422.120 | Requested Date is missing\t | If the UDAC is Online: RequestedDate tag is missing, empty, or does not contain a valid date in format YYYY-MM-DD\n422.121\t| Term is missing | Term tag is missing, empty, or does not contain a valid Term (integer from 1 to 100)\n422.130 | Heading code is missing | HeadingCode tag is missing or empty.\n422.131 | Heading code is invalid | If provided, the heading code is not recognized as a valid heading code in the reference database\n422.132 | Heading code is incorrect for Cluster based UDAC | Heading is not online or has no cluster code for the one required by the UDAC (online or mobile)\n422.220 | Udac Exception Found | The UDAC, Directory and Online heading code cannot be sold together.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "products",
            "in": "body",
            "description": "The list of products to get the price information for",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "udac": {
                    "type": "string"
                  },
                  "directoryCode": {
                    "type": "string"
                  },
                  "headingCode": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "Start date of contract (YYYY-MM-DD)"
                  },
                  "contractLength": {
                    "type": "integer",
                    "description": "Length of contract in months (1-100)"
                  }
                },
                "required": [
                  "udac",
                  "directoryCode",
                  "startDate",
                  "contractLength"
                ],
                "additionalProperties": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "udac": {
                            "type": "string"
                          },
                          "directoryCode": {
                            "type": "string"
                          },
                          "headingCode": {
                            "type": "string"
                          },
                          "startDate": {
                            "type": "string",
                            "description": "Start date of contract (YYYY-MM-DD)"
                          },
                          "contractLength": {
                            "type": "integer",
                            "description": "Length of contract in months (1-100)"
                          },
                          "unitPrices": {
                            "$ref": "#/definitions/price"
                          },
                          "subtotals": {
                            "$ref": "#/definitions/price"
                          }
                        }
                      }
                    },
                    "totals": {
                      "$ref": "#/definitions/price"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    "422.121"
                  ],
                  "details": [
                    {
                      "code": "422.121",
                      "message": "Term tag is missing, empty, or does not contain a valid Term (integer from 1 to 100)"
                    }
                  ]
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    500
                  ],
                  "details": [
                    {
                      "code": 500,
                      "message": "Internal Error"
                    }
                  ]
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/prices": {
      "get": {
        "description": "##### Retrieve price of a product for a specific date, heading code, directory code, and contract length (in the number of months)\n\n###### Retrieve a price\nIn order to get the price for a product 5 parameters are required :\n* udac\n* directory code\n* heading code\n* start date\n* length of the contract in months\n\nYou need to pass these 5 parameters as query strings :\n```\ncurl \"https://dev-api.ypcloud.io/prices/prices?udac=GSP&directoryCode=00701&startDate=2017-03-01&headingCode=0061350&contractLength=12\"\n\n{\n   \"result\":true,\n   \"data\":{\n      \"basePrice\":\"643.65\",\n      \"discountedPrice\":\"643.65\"\n   }\n}\n```\n\nIf a parameter is missing you will receive an error :\n```\ncurl \"https://dev-api.ypcloud.io/prices/prices?udac=GSP&directoryCode=00701&startDate=2017-03-01&headingCode=0061350\"\n\n{\n   \"result\":false,\n   \"errors\":{\n      \"codes\":[\n         172\n      ],\n      \"details\":[\n         {\n            \"code\":172,\n            \"message\":\"Missing required field: contractLength\"\n         }\n      ]\n   }\n}\n```\n\nIf all parameters are present but values are invalid, the error from the underlying system (CSA) is returned with a 422 http status code:\n\n```\ncurl \"https://dev-api.ypcloud.io/prices/prices?udac=GSP&directoryCode=00701&requestedDate=2017-03-01&headingCode=0061350&startDate=2017-03-01&contractLength=0\"\n\n{\n   \"result\":false,\n   \"errors\":{\n      \"codes\":[\n         \"422.121\"\n      ],\n      \"details\":[\n         {\n            \"code\":\"422.121\",\n            \"message\":\"Term tag is missing, empty, or does not contain a valid Term (integer from 1 to 100)\"\n         }\n      ]\n   }\n}\n```\n\n###### Error Codes\n\nCode | Description | Condition\n------------ | ------------- | -------------\n422.100 | UDAC is missing | UDAC tag is missing or empty\n422.101 | UDAC is invalid | UDAC tag text is not recognized as a valid UDAC in the reference database\n422.110 | Directory Code is missing | DirectoryCode tag is missing or empty\n422.111 | Directory Code is invalid | DirectoryCode tag text is not recognized as a valid directory code in the reference database\n422.120 | Requested Date is missing\t | If the UDAC is Online: RequestedDate tag is missing, empty, or does not contain a valid date in format YYYY-MM-DD\n422.121\t| Term is missing | Term tag is missing, empty, or does not contain a valid Term (integer from 1 to 100)\n422.130 | Heading code is missing | HeadingCode tag is missing or empty.\n422.131 | Heading code is invalid | If provided, the heading code is not recognized as a valid heading code in the reference database\n422.132 | Heading code is incorrect for Cluster based UDAC | Heading is not online or has no cluster code for the one required by the UDAC (online or mobile)\n422.220 | Udac Exception Found | The UDAC, Directory and Online heading code cannot be sold together.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "udac",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The code of the product to look the prices for (udac)"
          },
          {
            "name": "directoryCode",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The directory code."
          },
          {
            "name": "headingCode",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The heading code."
          },
          {
            "name": "startDate",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The requested date (YYYY-MM-DD)."
          },
          {
            "name": "contractLength",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The contract length in months (1-100)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "basePrice": "643.65",
                  "discountedPrice": "643.65"
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/definitions/price"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    "422.121"
                  ],
                  "details": [
                    {
                      "code": "422.121",
                      "message": "Term tag is missing, empty, or does not contain a valid Term (integer from 1 to 100)"
                    }
                  ]
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    500
                  ],
                  "details": [
                    {
                      "code": 500,
                      "message": "Internal Error"
                    }
                  ]
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/keywords": {
      "get": {
        "description": "Retrieve all keywords with search filters. Supports pagination.\n\n\n##### Retrieve all keywords\nUse this api if you to retrieve all directories and their name in one shot.\n```\ncurl -X GET https://qa-api.ypcloud.io/rdclassifications/keywords -H \"Accept: application/json\"\n> status → 200\n> x-total-count → 7661\n{\n  \"result\": true,\n  \"data\": [\n    {\n      \"id\": \"349\",\n      \"name\": {\n        \"en\": \"fumigation\",\n        \"fr\": \"fumigation\"\n      },\n      \"headings\": [\n        \"00979700\",\n        \"00530600\"\n      ],\n      \"classifications\": [\n        \"1006\"\n      ]\n    },\n    {\n      \"id\": \"4938\",\n      \"name\": {\n        \"en\": \"steel finishing\",\n        \"fr\": \"finition d'acier\"\n      },\n      \"headings\": [\n        \"01243200\"\n      ],\n      \"classifications\": [\n        \"1006\"\n      ]\n    },\n    {\n      ...\n    },\n      ...\n  ]\n}\n```\n\n##### Pagination with limit and offset\nIf you don't cache the complete keywords list on your side, you should use this API for pagination, for example to show 2 record per page and skip the first record you could use :\n```\ncurl -X GET https://qa-api.ypcloud.io/rdclassifications/keywords?offset=10&limit=2 -H \"Accept: application/json\"\n\n> link → <https://qa-api.ypcloud.io/rdclassifications/keywords?limit=2&offset=12>; rel=\"next\", <https://qa-api.ypcloud.io/rdclassifications/keywords?limit=2&offset=7659>; rel=\"last\", <https://qa-api.ypcloud.io/rdclassifications/keywords?limit=2&offset=0>; rel=\"first\", <https://qa-api.ypcloud.io/rdclassifications/keywords?limit=2&offset=8>; rel=\"prev\"\n> status → 200\n> x-total-count → 7661\n\n{\n    \"result\": true,\n    \"data\": [\n      {\n        \"id\": \"3174\",\n        \"name\": {\n          \"en\": \"lock installation\",\n          \"fr\": \"installation de serrure\"\n        },\n        \"headings\": [\n          \"00783100\"\n        ],\n        \"classifications\": [\n          \"1006\"\n        ]\n      },\n      {\n        \"id\": \"3434\",\n        \"name\": {\n          \"en\": \"medical school\",\n          \"fr\": \"faculté de médecine\"\n        },\n        \"headings\": [\n          \"01164800\"\n        ],\n        \"classifications\": [\n          \"1006\"\n        ]\n      }\n    ]\n}\n```\n\n##### Filter by classification\nIf you need to retrieve keywords for only a specific classification, use 'classification' parameter. Example with code '1004' Methods of payment :\n```\ncurl -X GET https://qa-api.ypcloud.io/rdclassifications/keywords?classification=1004&&limit=2\n{\n    \"result\": true,\n    \"data\": [\n        {\n        \"id\": \"mp08\",\n        \"name\": {\n          \"en\": \"Interac\",\n          \"fr\": \"Interac\"\n        },\n        \"headings\": [],\n        \"classifications\": [\n          \"1004\"\n        ]\n      },\n      {\n        \"id\": \"mp10\",\n        \"name\": {\n          \"en\": \"Money Order\",\n          \"fr\": \"Mandat-poste\"\n        },\n        \"headings\": [],\n        \"classifications\": [\n          \"1004\"\n        ]\n      }\n    ]\n}\n```\n##### Filter by heading\nIf you need to retrieve keywords that are relevant to a specific heading, use 'heading' parameter. Example with classification code '1006' Products and services and heading '00783100'\n```\ncurl -X GET https://qa-api.ypcloud.io/rdclassifications/keywords?classification=1006&heading=00783100&limit=2\n{\n    \"result\": true,\n    \"data\": [\n        {\n        \"id\": \"3174\",\n        \"name\": {\n          \"en\": \"lock installation\",\n          \"fr\": \"installation de serrure\"\n        },\n        \"headings\": [\n          \"00783100\"\n        ],\n        \"classifications\": [\n          \"1006\"\n        ]\n      },\n      {\n        \"id\": \"2434\",\n        \"name\": {\n          \"en\": \"combination lock\",\n          \"fr\": \"serrure à combinaison\"\n        },\n        \"headings\": [\n          \"00783100\"\n        ],\n        \"classifications\": [\n          \"1006\"\n        ]\n      }\n    ]\n}\n```\n##### Search by 'contains'\nIf you don't cache the complete keywords list on your side and need a suggest box, you should use the 'contains' and 'limit' query parameters. It is recommended to also use the 'lang' filter. For example if the user types \"ste\" in the suggest box, then you could call this API to show possible keywords that contains \"ste\" :\n```\ncurl -X GET https://qa-api.ypcloud.io/rdclassifications/keywords?classification=1006&lang=en&contains=ste&limit=2\n{\n    \"result\": true,\n    \"data\": [\n        {\n        \"id\": \"4938\",\n        \"name\": {\n          \"en\": \"steel finishing\",\n          \"fr\": \"finition d'acier\"\n        },\n        \"headings\": [\n          \"01243200\"\n        ],\n        \"classifications\": [\n          \"1006\"\n        ]\n      },\n      {\n        \"id\": \"6505\",\n        \"name\": {\n          \"en\": \"steel garage\",\n          \"fr\": \"garage en acier\"\n        },\n        \"headings\": [\n          \"00203000\"\n        ],\n        \"classifications\": [\n          \"1006\"\n        ]\n      }\n    ]\n}\n```\n##### Search by 'text'\nIt's possible to search by text parameter. An elasticsearch text search will be applied on the keyword name. It is recommended to also use the 'lang' filter. Text search example for \"candies\"\n```\ncurl -X GET https://qa-api.ypcloud.io/rdclassifications/keywords?classification=1006&text=candies&lang=en\n{\n    \"result\": true,\n    \"data\": [\n        {\n        \"id\": \"2926\",\n        \"name\": {\n          \"en\": \"promotional candy\",\n          \"fr\": \"bonbon promotionnel\"\n        },\n        \"headings\": [\n          \"01070100\"\n        ],\n        \"classifications\": [\n          \"1006\"\n        ]\n      },\n      {\n        \"id\": \"5850\",\n        \"name\": {\n          \"en\": \"candy basket\",\n          \"fr\": \"panier de bonbons\"\n        },\n        \"headings\": [\n          \"00628490\"\n        ],\n        \"classifications\": [\n          \"1006\"\n        ]\n      }\n    ]\n}\n```\n\n##### Search by language\nIt is possible to restrict search in name of a specific language by specifying it in the query parameter which is recommended for 'contains' and 'text' searches :\n\n```\ncurl -X GET https://qa-api.ypcloud.io/rdclassifications/keywords?classification=1006&lang=en&contains=ste&limit=2\ncurl -X GET https://qa-api.ypcloud.io/rdclassifications/keywords?classification=1006&text=candies&lang=en&limit=2\n```\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "number",
            "description": "The maximum number of directories returned in responses."
          },
          {
            "name": "offset",
            "in": "query",
            "type": "number",
            "description": "The offset from where to start the search. Use this for pagination."
          },
          {
            "name": "classification",
            "in": "query",
            "type": "string",
            "description": "Classification code to filter keywords."
          },
          {
            "name": "heading",
            "in": "query",
            "type": "string",
            "description": "Heading code to filter keywords."
          },
          {
            "name": "contains",
            "in": "query",
            "type": "string",
            "description": "Case-insensitive \"like\" search. Usually works with a provided language"
          },
          {
            "name": "text",
            "in": "query",
            "type": "string",
            "description": "Case-insensitive \"text\" search. Usually works with a provided language"
          },
          {
            "name": "lang",
            "in": "query",
            "type": "string",
            "description": "Language for search. Used in combination with \"contains\" or \"text\""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "link": {
                "description": "Links for pagination. Only present if limit or offset query parameters are used. Maximum 4 different headers with link to first page, previous page, next page, and last page.",
                "type": "string"
              },
              "x-total-count": {
                "description": "Number of results matching the current criteria",
                "type": "integer",
                "minimum": 0
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "keyword id"
                      },
                      "name": {
                        "type": "object",
                        "properties": {
                          "en": {
                            "type": "string",
                            "description": "English label of the keyword"
                          },
                          "fr": {
                            "type": "string",
                            "description": "French label of the keyword"
                          }
                        }
                      },
                      "headings": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Array of heading codes"
                      },
                      "classifications": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Array of classification codes"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/directories": {
      "get": {
        "description": "Retrieve all directories or search by code and name. Supports pagination.\n\nPlease note: this service currently returns MOCKED DATA.\n\n##### Retrieve all directories\nUse this api if you to retrieve all directories and their name in one shot.\n```\ncurl -X GET https://dev-api.ypcloud.io/rddirectories/directories -H \"Accept: application/json\"\n> status → 200\n> x-total-count → 100\n{\n  \"result\": true,\n  \"data\": [\n      {\n          \"code\": \"095554\",\n          \"name\": {\n              \"fr\": \"Rouyn-Noranda\",\n              \"en\": \"Rouyn-Noranda\"\n          },\n          \"province\": \"QC\",\n          \"postalCodes\": [\n              {\n                  \"name\": \"J9X 0A1\"\n              },\n              {\n                  \"name\": \"J9X 1A1\"\n              }\n          ]\n      },\n      {\n        ...\n      },\n      ...\n  ]\n}\n```\n\n##### Pagination with limit and offset\nIf you don't cache the complete directories list on your side, you should use this API for pagination, for example to show 2 record per page and skip the first record you could use :\n```\ncurl -X GET https://dev-api.ypcloud.io/rddirectories/directories?offset=1&limit=2 -H \"Accept: application/json\"\n\n> link → <https://dev-api.ypcloud.io/rddirectories/directories?limit=2&offset=3>; rel=\"next\", <https://dev-api.ypcloud.io/rddirectories/directories?limit=2&offset=98>; rel=\"last\", <https://dev-api.ypcloud.io/rddirectories/directories?limit=2&offset=0>; rel=\"first\", <https://dev-api.ypcloud.io/rddirectories/directories?limit=2&offset=0>; rel=\"prev\"\n> status → 200\n> x-total-count → 100\n\n{\n    \"result\": true,\n    \"data\": [\n        {\n            \"code\": \"093018\",\n            \"name\": {\n                \"fr\": \"Newmarket\",\n                \"en\": \"Newmarket\"\n            },\n            \"province\": \"ON\",\n            \"postalCodes\": [\n                {\n                    \"name\": \"L3X 1H7\"\n                },\n                {\n                    \"name\": \"L3X 1H9\"\n                },\n                {\n                    \"name\": \"L3X 2N1\"\n                }\n            ]\n        },\n        {\n            \"code\": \"109235\",\n            \"name\": {\n                \"fr\": \"Toronto Core\",\n                \"en\": \"Toronto Core\"\n            },\n            \"province\": \"ON\",\n            \"postalCodes\": [\n                {\n                    \"name\": \"M4B 1B4\"\n                },\n                {\n                    \"name\": \"M4B 1B5\"\n                },\n                {\n                    \"name\": \"M4B 1B6\"\n                }\n            ]\n        }\n    ]\n}\n```\n\n##### Search by 'contains'\nIf you don't cache the complete directories list on your side and need a suggest box, you should use the 'contains' and 'limit' query parameters. For example if the user types \"nia\" in the suggest box, then you could call this API to show 2 possible directories that match 'nia':\n\n```\ncurl -X GET https://dev-api.ypcloud.io/rddirectories/directories?contains=nia\n{\n    \"result\": true,\n    \"data\": [\n        {\n            \"code\": \"093055\",\n            \"name\": {\n                \"fr\": \"NIAGARA REG\",\n                \"en\": \"NIAGARA REG\"\n            },\n            \"province\": \"ON\",\n            \"postalCodes\": []\n        },\n        {\n            \"code\": \"NIAGAR\",\n            \"name\": {\n                \"fr\": \"Niagara Pkg/Ens\",\n                \"en\": \"Niagara Pkg/Ens\"\n            },\n            \"province\": \"ON\",\n            \"postalCodes\": []\n        },\n        {\n            \"code\": \"093514\",\n            \"name\": {\n                \"fr\": \"Sarnia\",\n                \"en\": \"Sarnia\"\n            },\n            \"province\": \"ON\"\n        }\n    ]\n}\n```\n\n##### Search by language\nIt is possible to restrict search in name of a specific language by specifying it in the query parameter (code is still or the search though) :\n\n```\ncurl -X GET https://dev-api.ypcloud.io/rddirectories/directories?limit=2&contains=nia&offset=0&lang=fr\n```\n\n##### Search by postal code\nIt is possible to restrict search by postal code with the first 3 or more characters of a postalCode by specifying it in the query parameter (it will ignore spaces or dashes)\n\n```\ncurl -X GET https://dev-api.ypcloud.io/rddirectories/directories?postalCode=r3m\n\n{\n  \"result\": true,\n  \"data\": [\n      {\n          \"code\": \"087900\",\n          \"name\": {\n              \"fr\": \"Winnipeg\",\n              \"en\": \"Winnipeg\"\n          },\n          \"province\": \"MB\",\n          \"postalCodes\": [\n              {\n                  \"name\": \"R3M 0Y0\"\n              }\n          ]\n      },\n      {\n          \"code\": \"087895\",\n          \"name\": {\n              \"fr\": \"Prarie Mountain\",\n              \"en\": \"Prarie Mountain\"\n          },\n          \"province\": \"MB\",\n          \"postalCodes\": [\n              {\n                  \"name\": \"R3M 2H1\"\n              }\n          ]\n      }\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "number",
            "description": "The maximum number of directories returned in responses."
          },
          {
            "name": "offset",
            "in": "query",
            "type": "number",
            "description": "The offset from where to start the search. Use this for pagination."
          },
          {
            "name": "contains",
            "in": "query",
            "type": "string",
            "description": "Optional case-insensitive search criteria. If present only directories that contains this string in code or name are returned."
          },
          {
            "name": "lang",
            "in": "query",
            "type": "string",
            "description": "Optional language for search. If present the search is done in the code and the label of this language."
          },
          {
            "name": "postalCode",
            "in": "query",
            "type": "string",
            "description": "Optional case-insensitive search criteria. If present only directories that have a postal code starting with the supplied parameter (3 or more first characters, spaces and dashes are ignored) are returned."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "link": {
                "description": "Links for pagination. Only present if limit or offset query parameters are used. Maximum 4 different headers with link to first page, previous page, next page, and last page.",
                "type": "string"
              },
              "x-total-count": {
                "description": "Number of results matching the current criteria",
                "type": "integer",
                "minimum": 0
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of the directory"
                      },
                      "name": {
                        "type": "object",
                        "properties": {
                          "fr": {
                            "type": "string",
                            "description": "French label of the directory"
                          },
                          "en": {
                            "type": "string",
                            "description": "English label of the directory"
                          }
                        }
                      },
                      "province": {
                        "type": "string",
                        "description": "Province of the directory"
                      },
                      "postalCodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "the postal code"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/directories/{standardCode}/directoryLegacyCode": {
      "get": {
        "description": "Conversion service to convert a standard directory code to the legacy version, used to interact with ypg legacy systems. ex: CF, AC\n  ```\n  curl -X GET https://dev-api.ypcloud.io/rddirectories/directories/095180/directoryLegacyCode\n\n  < HTTP/1.1 200\n\n  {\n    \"result\": true,\n    \"data\": \"007021\"\n  }\n  ```\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "standardCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The directory standard code to be converted"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "string",
                  "description": "The directory legacy code"
                }
              }
            }
          }
        }
      }
    },
    "/headings": {
      "get": {
        "description": "##### Retrieve all headings or search by code and name. Supports pagination\n\n###### Retrieve all headings\n```\n curl \"http://localhost:7004/headings\"\n\n > GET /headings HTTP/1.1\n > Host: localhost:7004\n > User-Agent: curl/7.47.0\n > Accept: */*\n >\n < HTTP/1.1 200 OK\n < X-Powered-By: Express\n < x-total-count: 2695\n < Content-Type: application/json; charset=utf-8\n < Content-Length: 298203\n < ETag: W/\"48cdb-PG0V+wAhhVGpesdgZR5lA6Q\"\n < Date: Thu, 05 Jan 2017 12:46:37 GMT\n < Connection: keep-alive\n <\n { [16149 bytes data]\n {\"result\":true,\"data\":[{\"code\":\"0\",\"name\":{\"fr\":\"TBD fr\",\"en\":\"TBD en\"}},{\"code\":\"766800\",\"name\":{\"fr\":\"Lettrage d'enseignes\",\"en\":\"Lettering-Signs\"},\"sensitive\":false},{\"code\":\"1304400\",\"name\":{\"fr\":\"Tentes\",\"en\":\"Tents\"},\"sensitive\":false},{\"code\":\"131838\",\"label\n s\":{\"fr\":\"Bains & saunas de détente\",\"en\":\"Baths & Saunas-Relaxation\"},\"sensitive\":false},{\"code\":\"657660\",\"name\":{\"fr\":\"Centres de gymnastique\",\"en\":\"Gymnastics Clubs & Instruction\"},\"sensitive\":false},{\"code\":\"323200\",\"name\":{\"fr\":\"Courtiers en denrées\",\"en\":\"Commo\n dity Brokers\"},\"sensitive\":false},{\"code\":\"63925\",\"name\":{\"fr\":\"Aquariums & fournitures\",\"en\":\"Aquariums & Supplies\"},\"sensitive\":false},{\"code\":\"1338700\",\"name\":{\"fr\":\"Attractions touristiques\",\"en\":\"Tourist Attractions\"},\"sensitive\":false},{\"code\":\"93000\",\"name\":\n {\"fr\":\"Automobiles-Réparation de carrosseries & peinture\",\"en\":\"Automobile Body Repairing & Painting\"},\"sensitive\":false},{\"code\":\"617200\",\"name\":{\"fr\":\"Gaz-Compagnies\",\"en\":\"Gas Companies\"},\"sensitive\":false},{\"code\":\"239205\",\"name\":{\"fr\":\"Tapis & carpettes-Fabrican\n ts, grossistes & distributeurs\",\"en\":\"Carpet & Rug Distrs, Mfrs & Whol\"},\"sensitive\":false},{\"code\":\"1119000\",\"name\":{\"fr\":\"Location-Service général\",\"en\":\"Rental Services-General\"},\"sensitive\":false},{\"code\":\"298060\",\"name\":{\"fr\":\"Citernes\",\"en\":\"Cisterns\"},\"sensiti\n ve\":false},{\"code\":\"63400\",\"name\":{\"fr\":\"Orientation professionnelle\",\"en\":\"Aptitude Testing\"},\"sensitive\":false},{\"code\":\"274000\",\"name\":{\"fr\":\"Produits chimiques-Entreposage & manutention\",\"en\":\"Chemicals-Storage & Handling\"},\"sensitive\":false},{\"code\":\"26600\",\"lab\n els\":{\"fr\":\"Chimie agricole\",\"en\":\"Agricultural Chemicals\"},\"sensitive\":false},{\"code\":\"1360915\",\"name\":{\"fr\":\"Capots de caisse & accessoires de camionnettes\",\"en\":\"Truck Caps & Accessories\"},\"sensitive\":false},{\"code\":\"272800\",\"name\":{\"fr\":\"Fromage\",\"en\":\"Cheese\"},\"\n sensitive\":false},{\"code\":\"563800\",\"name\":{\"fr\":\"Mâts pour drapeaux\",\"en\":\"Flagpoles\"},\"sensitive\":false},{\"code\":\"1404868\",\"name\":{\"fr\":\"Jeux vidéo-Détaillants\",\"en\":\"Video Games-Retail\"},\"sensitive\":false},{\"code\":\"937300\",\"name\":{\"fr\":\"Orthésistes-Prothésistes\",\n \"en\":\"Orthesis-Prosthetists\"},\"sensitive\":false},{\"code\":\"1404852\",\"name\":{\"fr\":\"Vidéo-Equipement\",\"en\":\"Video Equipment\"},\"sensitive\":false},{\"code\":\"961000\",\"name\":{\"fr\":\"Parcs\",\"en\":\"Parks\"},\"sensitive\":false},{\"code\":\"1214100\",\"name\":{\"fr\":\"Sommeil-Troubles\",\"e\n n\":\"Sleep Disorders\"},\"sensitive\":false},{\"code\":\"1425200\",\"name\":{\"fr\":\"Soudage-Equipement & fournitures\",\"en\":\"Welding Equipment & Supplies\"},\"sensitive\":false},{\"code\":\"1064675\",\"name\":{\"fr\":\"Approvisionnement-Conseillers\",\"en\":\"Procurement Consultants\"},\"sensitiv\n e\":false},{\"code\":\"897000\",\"name\":{\"fr\":\"Musiciens\",\"en\":\"Musicians\"},\"sensitive\":false},{\"code\":\"184200\",\"name\":{\"fr\":\"Boîtes de carton ondulé & de fibre\",\"en\":\"Boxes-Corrugated & Fibre\"},\"sensitive\":false},{\"code\":\"762875\",\"name\":{\"fr\":\"Fuites-Service de détectio\n n\",\"en\":\"Leak Detection Service\"},\"sensitive\":false},{\"code\":\"1345275\",\"name\":{\"fr\":\"Circulation-Régulation-Entrepreneurs & services\",\"en\":\"Traffic Control Contractors & Services\"},\"sensitive\":false},{\"code\":\"333400\",\"name\":{\"fr\":\"Béton-Produits\",\"en\":\"Concrete Produ\n cts\"},\"sensitive\":false},{\"code\":\"1314000\",\"name\":{\"fr\":\"Théâtre-Equi&pement & accessoires\",\"en\":\"Theatrical Equipment & Supplies\"},\"sensitive\":false},{\"code\":\"238750\",\"name\":{\"fr\":\"Tapis & carpettes-Détaillants\",\"en\":\"Carpet & Rug Dealers\"},\"sensitive\":false},{\"code\"\n :\"645600\",\"name\":{\"fr\":\"Elévateurs à grain-Equipement\",\"en\":\"Grain Elevator Equipment\"},\"sensitive\":false},{ ...\n```\nAs you can see the whole data is about 16k. It contains 2695 headings as the x-total-count header shows. If you don't want to cache this data in your app, you should consider using the pagination and search apis.\n\n###### Pagination with limit and offset\nIf you don't cache the complete headings list on your side, you should use this API for pagination, for example to display a table showing 10 results you could use :\n```\ncurl \"http://localhost:7004/headings?limit=10&offset=60\"\n\n{\"result\":true,\"data\":[{\"code\":\"922305\",\"name\":{\"fr\":\"Matériel et service d'exploitation pétrolière en mer\",\"en\":\"Oil Offshore Service, Equipment & Supplies\"},\"sensitive\":false},{\"code\":\"594600\",\"name\":{\"fr\":\"Fruits & légumes-Détaillants\",\"en\":\"Fruits & Vegetables-Retail\"},\"sensitive\":false},{\"code\":\"1404871\",\"name\":{\"fr\":\"Jeux vidéo-Fabricants & grossistes\",\"en\":\"Video Games-Whol & Mfrs\"},\"sensitive\":false},{\"code\":\"1343800\",\"name\":{\"fr\":\"Tracteurs-Fabricants & distributeurs\",\"en\":\"Tractor Distrs & Mfrs\"},\"sensitive\":false},{\"code\":\"498600\",\"name\":{\"fr\":\"Ingénieurs métallurgistes\",\"en\":\"Engineers-Metallurgical\"},\"sensitive\":false},{\"code\":\"1070710\",\"name\":{\"fr\":\"Propriétés-Gestion\",\"en\":\"Property Management\"},\"sensitive\":false},{\"code\":\"538200\",\"name\":{\"fr\":\"Aliments pour animaux-Détaillants\",\"en\":\"Feed Dealers\"},\"sensitive\":false},{\"code\":\"1094400\",\"name\":{\"fr\":\"Wagons-Fabricants\",\"en\":\"Railroad Cars-Mfrs\"},\"sensitive\":false},{\"code\":\"192000\",\"name\":{\"fr\":\"Trousseaux de mariée-Fabricants & grossistes\",\"en\":\"Bridal Supplies-Whol & Mfrs\"},\"sensitive\":false},{\"code\":\"948850\",\"name\":{\"fr\":\"Boiseries-Finition spéciale\",\"en\":\"Panelling\"},\"sensitive\":false}]}\n```\nThis example shows the 6th page of 10 results each.\nHttp headers contain links to browse the results :\n```\n< HTTP/1.1 200 OK\n< X-Powered-By: Express\n< x-total-count: 2695\n< link: </headings?offset=70&limit=10>; rel=\"next\"\n< link: </headings?offset=2685&limit=10>; rel=\"last\"\n< link: </headings?offset=0&limit=10>; rel=\"first\"\n< link: </headings?offset=50&limit=10>; rel=\"prev\"\n```\n\n###### Search by 'contains'\nIf you don't cache the complete headings list on your side and need a suggest box, you should use the 'contains' and 'limit' query parameters\n\nFor example if the user types \"Pi\" in the suggest box, then you could call this API to show 2 possible headings that match 'Pi':\n```\ncurl \"http://localhost:7004/headings?limit=2&contains=Pi&offset=0\" -v\n\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 7004 (#0)\n> GET /headings?limit=2&contains=Pi&offset=0 HTTP/1.1\n> Host: localhost:7004\n> User-Agent: curl/7.47.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< X-Powered-By: Express\n< x-total-count: 81\n< link: </headings?offset=2&limit=2&contains=Pi>; rel=\"next\"\n< link: </headings?offset=79&limit=2&contains=Pi>; rel=\"last\"\n< Content-Type: application/json; charset=utf-8\n< Content-Length: 264\n< ETag: W/\"108-xgiQFZief9t9YbFlFjm+0A\"\n< Date: Thu, 05 Jan 2017 13:09:53 GMT\n< Connection: keep-alive\n<\n* Connection #0 to host localhost left intact\n{\"result\":true,\"data\":[{\"code\":\"1250800\",\"name\":{\"fr\":\"Pierre concassée\",\"en\":\"Stone-Crushed\"},\"sensitive\":false},{\"code\":\"770560\",\"name\":{\"fr\":\"Chariots élévateurs industriels-Pièces & accessoires\",\"en\":\"Lift Trucks-Parts & Supplies\"},\"sensitive\":false}]}\n```\nAs you can see in the x-total-count http header, 81 headings match your criteria. Hence if the users type another letter you should reinvoke the API with the new string.\n\n###### Lang\nIt is possible to restrict search in names of a specific language by specifying it in the query parameter (code is still or the search though) :\n```\ncurl \"http://localhost:7004/headings?limit=2&contains=Pi&offset=0&lang=fr\" -v\n```\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "number",
            "description": "The maximum number of headings returned in responses."
          },
          {
            "name": "offset",
            "in": "query",
            "type": "number",
            "description": "The offset from where to start the search. Use this for pagination."
          },
          {
            "name": "contains",
            "in": "query",
            "type": "string",
            "description": "Optional case-insensitive search criteria. If present only headings that contains this string in code or name are returned."
          },
          {
            "name": "lang",
            "in": "query",
            "type": "string",
            "description": "Optional language for search. If present the search is done in the code and the label of this language."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "link": {
                "description": "Links for pagination. Only present if limit or offset query parameters are used. Maximum 4 different headers with link to first page, previous page, next page, and last page.",
                "type": "string"
              },
              "x-total-count": {
                "description": "Number of results matching the current criteria",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": {
                "result": true,
                "data": [
                  {
                    "code": "979700",
                    "name": {
                      "fr": "Extermination et fumigation",
                      "en": "Pest Control Services"
                    },
                    "sensitive": false
                  }
                ]
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of the heading"
                      },
                      "name": {
                        "type": "object",
                        "properties": {
                          "fr": {
                            "type": "string",
                            "description": "French label of the heading"
                          },
                          "en": {
                            "type": "string",
                            "description": "English label of the heading"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{id}/leads": {
      "get": {
        "tags": [
          "SalesRep"
        ],
        "summary": "This One Profile API call is used to fetch all known salesforce leads for this particular sales-rep.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The alphanumeric string mongoID "
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/leadResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/by-email/{email}": {
      "get": {
        "tags": [
          "SalesRep"
        ],
        "summary": "This One Profile API call is used to fetch all known information about a sales rep. A particularly usefull property is the positionNumber, which is used to find the leads that are assigned to the sales rep. The salesChannel and salesRegion may also be used to find leads of interest. The contact information is also present.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The string representing the email address of the salesrep. Case insensitive."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/response"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/docs": {
      "get": {
        "tags": [
          "SalesRep"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health/": {
      "get": {
        "tags": [
          "SalesRep"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/health"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rates": {
      "get": {
        "description": "##### Get tax rates\n\n###### Retrieve tax rate(s) by province\nUse this if you want to retrieve tax rate(s) of one Canadian province. Use the 2-letter province code as the query parameter in the GET request.\n```\ncurl \"http://localhost:7010/rates?province=QC\"\n\n{\n  \"result\": true,\n  \"data\": {\n    \"totalRate\": 0.14975,\n    \"province\": \"QC\",\n    \"rates\": [\n      {\n         \"rate\": 0.09975,\n         \"name\": \"QUEBEC\",\n         \"type\": \"province\"\n      },\n      {\n        \"rate\": 0.05,\n        \"name\": \"CANADA\",\n        \"type\": \"country\"\n      }\n    ]\n  }\n}\n```\n\n###### Remove tax rates from the database\nUse this if you want to remove all the rates from database. You will need to do this if there is a tax rate change while the rates in the database is not up-to-date.\n```\ncurl -X \"DELETE\" \"http://localhost:7010/rates\"\n\n{\n  \"result\": true,\n  \"data\": {}\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "province",
            "in": "query",
            "type": "string",
            "enum": [
              "AB",
              "BC",
              "MB",
              "NB",
              "NL",
              "NT",
              "NS",
              "NU",
              "ON",
              "PE",
              "QC",
              "SK",
              "YT"
            ],
            "description": "Two letters province code (i.e., one of AB, BC, MB, NB, NL, NT, NS, NU, ON, PE, QC, SK, YT)",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "totalRate": {
                      "type": "number",
                      "description": "total tax rate in percentage",
                      "minimum": 0,
                      "maximum": 1
                    },
                    "rates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "description": "tax rate in percentage",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the tax"
                          },
                          "type": {
                            "type": "string",
                            "description": "type of the tax",
                            "enum": [
                              "country",
                              "province"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "totalRate": 0.05,
                  "rates": [
                    {
                      "rate": 0.05,
                      "name": "CANADA",
                      "type": "country"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the currently cached tax rates to force an update on the next get",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                }
              }
            },
            "examples": {
              "application/json": {
                "result": true
              }
            }
          }
        }
      }
    },
    "/emails": {
      "post": {
        "description": "Send the email with the supplied params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email to send",
            "schema": {
              "$ref": "#/definitions/email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/definitions/email"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    500
                  ],
                  "details": [
                    {
                      "code": 500,
                      "message": "Internal Error"
                    }
                  ]
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/config/{app}/{key}": {
      "parameters": [
        {
          "$ref": "#/parameters/app"
        },
        {
          "$ref": "#/parameters/key"
        }
      ],
      "get": {
        "description": "Retrieve a configuration entry from its application name and configuration key.\n",
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "app": "myapp",
                  "key": "mykey",
                  "title": "The title",
                  "description": "The description",
                  "value": "The retrieved value"
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "app": {
                      "type": "string",
                      "description": "Application name"
                    },
                    "key": {
                      "type": "string",
                      "description": "Configuration entry key"
                    },
                    "title": {
                      "type": "string",
                      "description": "Configuration entry title"
                    },
                    "description": {
                      "type": "string",
                      "description": "A long description of the configuration entry"
                    },
                    "data": {
                      "type": "string",
                      "description": "The retrieved value of the configuration entry"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    "404"
                  ],
                  "details": [
                    {
                      "code": "404",
                      "message": "Requested configuration entry was not found."
                    }
                  ]
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "application/json": {
                "result": false,
                "errors": {
                  "codes": [
                    500
                  ],
                  "details": [
                    {
                      "code": 500,
                      "message": "Internal Error"
                    }
                  ]
                }
              }
            },
            "schema": {
              "title": "Response",
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Error codes"
                      }
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Error details",
                        "properties": {
                          "code": {
                            "type": "number",
                            "description": "Error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Request delete a configuration.",
        "responses": {
          "200": {
            "description": "success query"
          },
          "404": {
            "description": "resource not found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "not implemented"
          }
        }
      }
    },
    "/config": {
      "put": {
        "summary": "add new config.",
        "description": "Request to add new config entry(s).",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "app",
                "key",
                "title",
                "description",
                "value"
              ],
              "properties": {
                "app": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success query"
          },
          "404": {
            "description": "resource not found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "not implemented"
          }
        }
      }
    },
    "/province": {
      "get": {
        "description": "Retrieve the complete list of Canadian provinces",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The province list",
            "examples": {
              "application/json": {
                "result": true,
                "data": [
                  {
                    "code": "AB",
                    "label": {
                      "en": "Alberta",
                      "fr": "Alberta"
                    }
                  },
                  {
                    "code": "BC",
                    "label": {
                      "en": "British Columbia",
                      "fr": "Colombie-Britannique"
                    }
                  },
                  {
                    "code": "MB",
                    "label": {
                      "en": "Manitoba",
                      "fr": "Manitoba"
                    }
                  },
                  {
                    "code": "NB",
                    "label": {
                      "en": "New Brunswick",
                      "fr": "Nouveau-Brunswick"
                    }
                  },
                  {
                    "code": "NL",
                    "label": {
                      "en": "Newfoundland and Labrador",
                      "fr": "Terre-Neuve et Labrador"
                    }
                  },
                  {
                    "code": "NS",
                    "label": {
                      "en": "Nova Scotia",
                      "fr": "Nouvelle-Écosse"
                    }
                  },
                  {
                    "code": "NT",
                    "label": {
                      "en": "Northwest Territories",
                      "fr": "Territoires du Nord-Ouest"
                    }
                  },
                  {
                    "code": "NU",
                    "label": {
                      "en": "Nunavut",
                      "fr": "Nunavut"
                    }
                  },
                  {
                    "code": "ON",
                    "label": {
                      "en": "Ontario",
                      "fr": "Ontario"
                    }
                  },
                  {
                    "code": "PE",
                    "label": {
                      "en": "Prince Edward Island",
                      "fr": "Île-du-Prince-Édouard"
                    }
                  },
                  {
                    "code": "QC",
                    "label": {
                      "en": "Quebec",
                      "fr": "Québec"
                    }
                  },
                  {
                    "code": "SK",
                    "label": {
                      "en": "Saskatchewan",
                      "fr": "Saskatchewan"
                    }
                  },
                  {
                    "code": "YT",
                    "label": {
                      "en": "Yukon Territories",
                      "fr": "Territoires du Yukon"
                    }
                  }
                ]
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Province"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/province/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/code"
        }
      ],
      "get": {
        "description": "Retrieve a specific province identified by its \"ISO-3166-2:CA\" code (two-letters code).\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "code": "QC",
                  "label": {
                    "en": "Quebec",
                    "fr": "Québec"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/definitions/Province"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "$ref": "#/definitions/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/carts": {
      "get": {
        "summary": "Get All carts",
        "description": "Get All the carts for a given mac",
        "parameters": [
          {
            "name": "macId",
            "in": "query",
            "required": true,
            "description": "The Mac Id.",
            "type": "string"
          },
          {
            "name": "leadIds",
            "in": "query",
            "required": true,
            "description": "The Lead Ids.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": true,
            "description": "The wanted language (en or fr).",
            "type": "string",
            "enum": [
              "en",
              "fr"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "records": [
                    {
                      "cartId": "58dd13fdac637a35018d38d8",
                      "_id": "58dd13fdac637a35018d38d8",
                      "user": {
                        "id": "58da910754c85e4980f12e6f",
                        "type": "lead"
                      },
                      "totalPrice": 180,
                      "lastSavedDate": 1490988176873,
                      "items": [
                        {
                          "id": "58deac0c7aa8e03501d8f6fb",
                          "productType": "digital",
                          "title": "NETSYNC PLUS",
                          "price": 180
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "cartId": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object"
                          },
                          "totalPrice": {
                            "type": "number"
                          },
                          "lastSavedDate": {
                            "type": "number"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "productType": {
                                  "type": "string"
                                },
                                "price": {
                                  "type": "number"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/{shoppingCartId}": {
      "get": {
        "summary": "Get cart by cart Id",
        "description": "Get Cart by cart Id",
        "parameters": [
          {
            "$ref": "#/parameters/shoppingCartId"
          },
          {
            "$ref": "#/parameters/itemsPerStore"
          },
          {
            "name": "lang",
            "in": "query",
            "required": true,
            "description": "The wanted language (en or fr).",
            "type": "string",
            "enum": [
              "en",
              "fr"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "_id": "58dd13fdac637a35018d38d8"
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete cart by cart Id",
        "description": "Delete Cart by cart Id",
        "parameters": [
          {
            "$ref": "#/parameters/shoppingCartId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/carts/lead/{leadId}": {
      "get": {
        "summary": "Get cart by lead Id",
        "description": "Get Cart by lead Id",
        "parameters": [
          {
            "$ref": "#/parameters/leadId"
          },
          {
            "$ref": "#/parameters/itemsPerStore"
          },
          {
            "name": "lang",
            "in": "query",
            "required": true,
            "description": "The wanted language (en or fr).",
            "type": "string",
            "enum": [
              "en",
              "fr"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "_id": "58dd13fdac637a35018d38d8",
                  "totalPrice": 180,
                  "stores": {
                    "2503611573_5-625AlphaStVictoriaBCV8Z1B5_Wes-TechIrrigationSupply": {
                      "businessName": "Wes-Tech Irrigation Supply",
                      "businessAddress": {
                        "streetAddress": "5-625 Alpha St",
                        "locality": "Victoria",
                        "region": "BC",
                        "postalCode": "V8Z1B5",
                        "country": "Canada"
                      },
                      "items": [
                        {
                          "id": "58deac0c7aa8e03501d8f6fb",
                          "mid": "2503611573_5-625AlphaStVictoriaBCV8Z1B5_Wes-TechIrrigationSupply,",
                          "quantity": 1,
                          "serial": "YPGRPRESB1490111741603",
                          "title": "NETSYNC PLUS",
                          "productConfiguration": {
                            "startingDate": "2017-04-02",
                            "contractLength": 12
                          },
                          "fulfillment": {
                            "content": {
                              "businessName": "Wes-Tech Irrigation Supply",
                              "businessAddress": {
                                "streetAddress": "5-625 Alpha St",
                                "locality": "Victoria",
                                "region": "BC",
                                "postalCode": "V8Z1B5",
                                "country": "Canada"
                              }
                            }
                          },
                          "minimumContent": {
                            "applicable": "true,",
                            "completed": false
                          },
                          "imagePath": {
                            "url": ""
                          },
                          "udac": "PRESB",
                          "merchantName": "Yellow Pages"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/definitions/OneCartDetailsByStore"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add an item to cart",
        "description": "This api will check if the cart exists for the leadId, and add an item to to it. Or it will create a new cart and add the item.",
        "parameters": [
          {
            "$ref": "#/parameters/leadId"
          },
          {
            "$ref": "#/parameters/itemsPerStore"
          },
          {
            "name": "lang",
            "in": "query",
            "required": true,
            "description": "The wanted language (en or fr).",
            "type": "string",
            "enum": [
              "en",
              "fr"
            ]
          },
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item to add.",
            "schema": {
              "type": "object",
              "properties": {
                "serial": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "productConfiguration": {
                  "$ref": "#/definitions/productConfiguration"
                },
                "fulfillment": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "$ref": "#/definitions/fulfillmentContent"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": null
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/items/{itemId}": {
      "put": {
        "summary": "Update an item",
        "description": "Update an item that is already in the cart",
        "parameters": [
          {
            "$ref": "#/parameters/itemId"
          },
          {
            "$ref": "#/parameters/itemsPerStore"
          },
          {
            "name": "lang",
            "in": "query",
            "required": true,
            "description": "The wanted language (en or fr).",
            "type": "string",
            "enum": [
              "en",
              "fr"
            ]
          },
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item to add.",
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number"
                },
                "productConfiguration": {
                  "$ref": "#/definitions/productConfiguration"
                },
                "fulfillmentContent": {
                  "$ref": "#/definitions/fulfillmentContent"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": null
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item",
        "description": "Delete an item from the cart",
        "parameters": [
          {
            "$ref": "#/parameters/itemId"
          },
          {
            "$ref": "#/parameters/itemsPerStore"
          },
          {
            "name": "lang",
            "in": "query",
            "required": true,
            "description": "The wanted language (en or fr).",
            "type": "string",
            "enum": [
              "en",
              "fr"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "_id": "58eba232c87bd500d4025c91",
                  "totalPrice": 600,
                  "user": {
                    "id": "58e3d8a6aba63e00013b4bd8",
                    "type": "lead",
                    "companyName": "Patterson & Adams, PLLC"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "description": "status will be set to 'deleted' if the item that was deleted was the last item in cart."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addons/{serial}/{lang}": {
      "parameters": [
        {
          "$ref": "#/parameters/serial"
        },
        {
          "$ref": "#/parameters/lang"
        }
      ],
      "get": {
        "summary": "Get addons details\n",
        "description": "Get details on all possible addons for given product. Titles are given in requested language (en or fr).\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": [
                  {
                    "serial": "YPGRWEBTRF1491233334260",
                    "udac": "WEBTRF",
                    "productType": "digital",
                    "title": "Website Translation to French",
                    "paymentType": "oneTime",
                    "multipleQuantity": false
                  },
                  {
                    "serial": "YPGRWEBOTHER1234",
                    "udac": "WEBOTHER",
                    "productType": "digital",
                    "title": "Website Other Addon",
                    "paymentType": "monthly",
                    "multipleQuantity": true
                  }
                ]
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AddonDetails"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "$ref": "#/definitions/Errors"
                }
              }
            }
          },
          "503": {
            "description": "Not Available",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "$ref": "#/definitions/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/apply-taxes/{province}/{amount}": {
      "parameters": [
        {
          "$ref": "#/parameters/province"
        },
        {
          "$ref": "#/parameters/amount"
        }
      ],
      "get": {
        "description": "Compute the Canadian taxes on given amount for provided province code\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "result": true,
                "data": {
                  "province": "QC",
                  "baseAmount": 5030,
                  "federalTaxes": 252,
                  "provincialTaxes": 502,
                  "totalTaxes": 754,
                  "totalPrice": 5784
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/definitions/AppliedTaxes"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "$ref": "#/definitions/Errors"
                }
              }
            }
          },
          "503": {
            "description": "Not Available",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "$ref": "#/definitions/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/voice-signature-link/{shoppingCartId}": {
      "parameters": [
        {
          "$ref": "#/parameters/shoppingCartId"
        },
        {
          "name": "payload",
          "in": "body",
          "description": "JSON payload",
          "required": true,
          "schema": {
            "$ref": "#/definitions/VoiceSignatureLink"
          }
        }
      ],
      "put": {
        "description": "Save or update the Voice signature link associated with the shopping cart\n",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Sucessful response"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "errors": {
                  "$ref": "#/definitions/Errors"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "accounts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/account"
      }
    },
    "accountsResponse": {
      "properties": {
        "result": {
          "type": "boolean",
          "description": "true if is a valid response. "
        },
        "data": {
          "$ref": "#/definitions/accounts"
        }
      },
      "required": [
        "result",
        "data"
      ]
    },
    "billingInfoResponse": {
      "properties": {
        "result": {
          "type": "boolean",
          "description": "true if is a valid response. "
        },
        "data": {
          "$ref": "#/definitions/billingInfo"
        }
      },
      "required": [
        "result",
        "data"
      ]
    },
    "accountResponse": {
      "properties": {
        "result": {
          "type": "boolean",
          "description": "true if is a valid response. "
        },
        "data": {
          "$ref": "#/definitions/account"
        }
      },
      "required": [
        "result",
        "data"
      ]
    },
    "health": {
      "properties": {
        "status": {
          "type": "number",
          "description": "Object with health status. "
        },
        "service": {
          "type": "string",
          "description": "Object with health status. "
        }
      },
      "required": [
        "status",
        "service"
      ]
    },
    "account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The account id in One Profile"
        },
        "email": {
          "type": "string",
          "description": "Email address of the merchant"
        },
        "phoneNum": {
          "type": "string",
          "description": "The phone number of the merchant"
        },
        "contactId": {
          "type": "string",
          "description": "The servicing contact id of the account"
        },
        "servicingAccountId": {
          "type": "string",
          "description": "The servicing account id of the account"
        }
      }
    },
    "billingInfo": {
      "type": "object",
      "title": "billingInfo",
      "properties": {
        "contactId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "streetAddress": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "addresses": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "The geocoded address"
          }
        }
      }
    },
    "errorResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean",
          "description": "The flag that indicates the success / failure of the request"
        },
        "errors": {
          "type": "object",
          "properties": {
            "codes": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "error code"
              }
            },
            "details": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "error code"
                  },
                  "message": {
                    "type": "string",
                    "description": "message associated with the error code"
                  }
                }
              }
            }
          }
        }
      }
    },
    "reserveRequest": {
      "description": "Request object used to make a new reservation",
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Name of the user that takes the action"
        },
        "directoryCode": {
          "type": "string",
          "description": "Directory code (e.g., 01900). Values can be found in referential"
        },
        "headingCode": {
          "type": "string",
          "description": "Heading code (e.g., 1125400). Values can be found in referential"
        },
        "requestedDate": {
          "description": "The requested start date (in yyyy-mm-dd format)",
          "type": "string"
        },
        "forceDate": {
          "description": "A true/false flag. It means we really want to start on the requested date, even if it does not fit the beginning of the slot",
          "type": "boolean"
        },
        "accountNumber": {
          "type": "string"
        },
        "tokenId": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "directoryCode",
        "headingCode",
        "requestedDate",
        "forceDate"
      ],
      "additionalProperties": false
    },
    "reservationInPlace": {
      "description": "Request object used when a reservation number is in place",
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Name of the user that takes the action"
        },
        "directoryCode": {
          "type": "string",
          "description": "Directory code (e.g., 01900). Values can be found in referential"
        },
        "headingCode": {
          "type": "string",
          "description": "Heading code (e.g., 01125400). Values can be found in referential"
        },
        "requestedDate": {
          "description": "The requested start date (in yyyy-mm-dd format)",
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "cmrNumber": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "directoryCode",
        "headingCode",
        "requestedDate"
      ],
      "additionalProperties": false
    },
    "Request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "documentType": {
          "type": "string",
          "pattern": "account|organization"
        },
        "action": {
          "type": "string",
          "pattern": "create|update|delete"
        },
        "source": {
          "type": "string",
          "pattern": "cams|salesforce|ypstore"
        },
        "status": {
          "type": "string",
          "default": "new",
          "pattern": "new|processing|rejected|success"
        },
        "rejectDetails": {
          "type": "object",
          "default": {},
          "description": "When the processing is complete & if the request is rejected, the reasons will be here"
        },
        "documentId": {
          "type": "string"
        },
        "payload": {
          "type": "object",
          "description": "The payload received with the request"
        }
      }
    },
    "orderNumber": {
      "type": "string",
      "description": "Order number in the system invoking this API."
    },
    "accountId": {
      "type": "string",
      "description": "Id of the account to do the order for. Only one of accountId, locationId, or brandId should be used"
    },
    "locationId": {
      "type": "string",
      "description": "Id of the location to do the order for. Only one of accountId, locationId, or brandId should be used"
    },
    "brandId": {
      "type": "string",
      "description": "Id of the brand to do the order for. Only one of accountId, locationId, or brandId should be used"
    },
    "priority": {
      "type": "integer",
      "description": "Priority of the order. 1-9."
    },
    "representantLogin": {
      "type": "string",
      "description": "Login of the representant who made the sale."
    },
    "price": {
      "type": "object",
      "properties": {
        "basePrice": {
          "type": "number",
          "description": "the base price, before any discount / deduction"
        },
        "discountedPrice": {
          "type": "number",
          "description": "The price, after discounts / deductions"
        }
      },
      "additionalProperties": false
    },
    "cfProposalId": {
      "type": "string",
      "description": "CF internal Id once the order has been submitted in CF."
    },
    "productCore": {
      "type": "object",
      "properties": {
        "productCode": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "description": "Price shown to the customer, multiplied by 100"
        },
        "configuration": {
          "type": "object",
          "properties": {
            "merchantId": {
              "type": "string"
            },
            "headingCode": {
              "type": "string"
            },
            "directoryCode": {
              "type": "string"
            },
            "languageCode": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "date"
            },
            "duration": {
              "type": "integer",
              "description": "Duration of the product in months"
            },
            "externalReservationNumber": {
              "type": "string",
              "description": "Reservation number in external system (e.g., AC)"
            },
            "specialCustomization": {
              "type": "string",
              "description": "Special Customization of product"
            },
            "promoText": {
              "type": "string",
              "description": "Promo text of the placement product"
            }
          },
          "required": [
            "merchantId",
            "headingCode",
            "directoryCode",
            "languageCode",
            "startDate",
            "duration"
          ],
          "additionalProperties": true
        }
      }
    },
    "addOns": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/productCore"
      }
    },
    "product": {
      "type": "object",
      "title": "Product"
    },
    "products": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/product"
      }
    },
    "orderToSubmit": {
      "type": "object",
      "properties": {
        "orderNumber": {
          "$ref": "#/definitions/orderNumber"
        },
        "accountId": {
          "$ref": "#/definitions/accountId"
        },
        "locationId": {
          "$ref": "#/definitions/locationId"
        },
        "brandId": {
          "$ref": "#/definitions/brandId"
        },
        "priority": {
          "$ref": "#/definitions/priority"
        },
        "representantLogin": {
          "$ref": "#/definitions/representantLogin"
        },
        "price": {
          "$ref": "#/definitions/price"
        },
        "products": {
          "$ref": "#/definitions/products"
        }
      },
      "required": [
        "orderNumber",
        "accountId",
        "priority",
        "price",
        "products"
      ]
    },
    "orderFull": {
      "type": "object",
      "properties": {
        "orderNumber": {
          "$ref": "#/definitions/orderNumber"
        },
        "accountId": {
          "$ref": "#/definitions/accountId"
        },
        "locationId": {
          "$ref": "#/definitions/locationId"
        },
        "brandId": {
          "$ref": "#/definitions/brandId"
        },
        "priority": {
          "$ref": "#/definitions/priority"
        },
        "representantLogin": {
          "$ref": "#/definitions/representantLogin"
        },
        "price": {
          "$ref": "#/definitions/price"
        },
        "account": {
          "$ref": "#/definitions/account"
        },
        "cfProposalId": {
          "$ref": "#/definitions/cfProposalId"
        },
        "products": {
          "$ref": "#/definitions/products"
        }
      }
    },
    "job": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The job id in mongo database"
        },
        "orderId": {
          "type": "string",
          "description": "The object id in mongo database for the order that this job is associated with"
        },
        "busy": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "description": "Time stamp of the moment that this job gets created"
        },
        "availableForProcess": {
          "type": "string",
          "description": "The minimum date and time at which the job will be available to be processed by the system"
        },
        "attempts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The id of the attempt"
              },
              "statusFrom": {
                "type": "string",
                "enum": [
                  "pending",
                  "sentToCF",
                  "internalErrorCF"
                ]
              },
              "statusTo": {
                "type": "string",
                "enum": [
                  "sentToCF",
                  "completed",
                  "badRequestCF",
                  "internalErrorCF",
                  "manualCheckNeeded"
                ]
              },
              "message": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "duration": {
                "type": "integer",
                "description": "duration in milliseconds of the attempt. undefined means an error occurred during the attempt."
              }
            }
          }
        },
        "status": {
          "type": "string",
          "description": "The current status of the job"
        }
      }
    },
    "NAP": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Business name"
        },
        "phone": {
          "$ref": "#/definitions/Telephone"
        },
        "address": {
          "$ref": "#/definitions/PostalAddress"
        }
      }
    },
    "FindOrCreateMIDResponse": {
      "type": "object",
      "properties": {
        "mid": {
          "type": "string",
          "description": "The MID created of retreived"
        },
        "status": {
          "type": "string",
          "description": "Is the MID created or not",
          "enum": [
            "created",
            "existing"
          ]
        }
      }
    },
    "Telephone": {
      "type": "string",
      "format": "^([2-9][0-8][0-9][2-9][0-9]{2})([0-9]{4})$"
    },
    "Organizations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Organization"
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Organization ID"
        },
        "type": {
          "type": "string",
          "description": "Organization type (Mall, Store, HQ...)"
        },
        "name": {
          "$ref": "#/definitions/i18nString"
        },
        "logos": {
          "$ref": "#/definitions/i18nLogoArray"
        },
        "emails": {
          "type": "array",
          "description": "Available emails",
          "items": {
            "type": "object",
            "description": "Email type/key & email/value",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string",
                "format": "email"
              }
            }
          }
        },
        "telephones": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Telephone type/key & telephone/value",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "$ref": "#/definitions/Telephone"
              }
            }
          }
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "URL type/key & URL/value",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string",
                "format": "url"
              }
            }
          }
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "openingHours": {
          "$ref": "#/definitions/OpeningHours"
        },
        "_meta": {
          "$ref": "#/definitions/Metadata"
        },
        "verticals": {
          "$ref": "#/definitions/Verticals"
        },
        "categories": {
          "$ref": "#/definitions/i18nCodeArray"
        },
        "languagesSpoken": {
          "$ref": "#/definitions/i18nCodeArray"
        },
        "paymentsAccepted": {
          "$ref": "#/definitions/i18nCodeArray"
        },
        "offers": {
          "$ref": "#/definitions/i18nCodeArray"
        },
        "description": {
          "$ref": "#/definitions/Description"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "name",
        "address"
      ]
    },
    "i18nString": {
      "type": "object",
      "description": "i18n string",
      "properties": {
        "en": {
          "type": "string",
          "description": "English field"
        },
        "fr": {
          "type": "string",
          "description": "French field"
        }
      }
    },
    "PostalAddress": {
      "type": "object",
      "description": "Postal address",
      "properties": {
        "country": {
          "type": "string",
          "description": "The country, two-letter ISO 3166-1 alpha-2 country code (uppercase)"
        },
        "locality": {
          "type": "string",
          "description": "The locality (aka the city). For example, Montreal"
        },
        "region": {
          "type": "string",
          "description": "The region (aka the province), two-letter ISO 3166-2:CA (uppercase)",
          "enum": [
            "AB",
            "BC",
            "MB",
            "NB",
            "NL",
            "NT",
            "NS",
            "NU",
            "ON",
            "PE",
            "QC",
            "SK",
            "YT"
          ]
        },
        "postOfficeBoxNumber": {
          "type": "string",
          "description": "The post office box number for PO box addresses"
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code.  For example: H3E 2A5"
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address. For example: 16 place du commerce"
        }
      },
      "required": [
        "country",
        "locality",
        "region",
        "postalCode",
        "streetAddress"
      ]
    },
    "Address": {
      "description": "Physical address",
      "allOf": [
        {
          "$ref": "#/definitions/PostalAddress"
        }
      ],
      "properties": {
        "timezone": {
          "$ref": "#/definitions/Timezone"
        },
        "geoCoordinate": {
          "$ref": "#/definitions/GeoCoordinate"
        }
      }
    },
    "Timezone": {
      "type": "object",
      "description": "timezone object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The timezone name in full. For example: `Eastern Standard Time`."
        },
        "abbr": {
          "type": "string",
          "description": "The abbreviated timezone name. For example: `EST`."
        },
        "offset": {
          "type": "number",
          "description": "The offset from `UTC` time. Goes from `-12` to `12`. Can be a floating-point like `-3.5`."
        },
        "isdst": {
          "type": "boolean",
          "description": "If daylight savings time is applied to the timezone or not"
        },
        "timezone": {
          "type": "string",
          "description": "The full UTC timezone name. For example: `(UTC-05:00) Indiana (East)`"
        },
        "utc": {
          "type": "array",
          "description": "The UTC timezone name. For example `Asia/Calcutta`",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GeoCoordinate": {
      "type": "object",
      "description": "timezone object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Value should always be `Point`"
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        }
      }
    },
    "OpeningHours": {
      "type": "object",
      "properties": {
        "regular": {
          "$ref": "#/definitions/RegularOpeningHours"
        },
        "special": {
          "$ref": "#/definitions/SpecialOpeningHours"
        },
        "notes": {
          "$ref": "#/definitions/i18nCodeArray"
        }
      }
    },
    "RegularOpeningHours": {
      "type": "array",
      "description": "Opening hours weekly",
      "items": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "$ref": "#/definitions/i18nString"
          },
          "hoursOfOperation": {
            "$ref": "#/definitions/HoursOfOperation"
          }
        },
        "required": [
          "dayOfWeek",
          "hoursOfOperation"
        ]
      },
      "minItems": 7,
      "maxItems": 7
    },
    "SpecialOpeningHours": {
      "type": "object",
      "description": "Use this to explicitly override general opening hours brought in scope by openingHours",
      "items": {
        "type": "object",
        "properties": {
          "holiday": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "hoursOfOperation": {
            "$ref": "#/definitions/HoursOfOperation"
          }
        },
        "required": [
          "hoursOfOperation"
        ]
      }
    },
    "HoursOfOperation": {
      "type": "object",
      "description": "open and close hours in 4-digit format ex 0915, 2300",
      "properties": {
        "open": {
          "type": "string"
        },
        "close": {
          "type": "string"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "description": "Organization information related to YP",
      "properties": {
        "cams": {
          "type": "object",
          "description": "Organization information related to YP CAMS",
          "properties": {
            "merchantId": {
              "type": "string",
              "description": "YP merchantId used for publishing"
            },
            "status": {
              "type": "string",
              "description": "YP merchant status"
            }
          }
        }
      }
    },
    "i18nCodeArray": {
      "type": "array",
      "description": "Organization localized code array",
      "items": {
        "$ref": "#/definitions/i18nCode"
      }
    },
    "i18nCode": {
      "type": "object",
      "description": "Organization localized code",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/i18nString"
        }
      }
    },
    "i18nCodeWithParent": {
      "allOf": [
        {
          "$ref": "#/definitions/i18nCode"
        },
        {
          "properties": {
            "parent": {
              "$ref": "#/definitions/i18nCode"
            }
          }
        }
      ],
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "i18nLogoArray": {
      "type": "array",
      "description": "Organization logo array",
      "items": {
        "$ref": "#/definitions/i18nLogo"
      }
    },
    "i18nLogo": {
      "type": "object",
      "description": "Organization localized logo",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Web",
            "Mobile",
            "Unknown"
          ]
        },
        "fr": {
          "$ref": "#/definitions/Url"
        },
        "en": {
          "$ref": "#/definitions/Url"
        }
      }
    },
    "Url": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "Verticals": {
      "type": "array",
      "description": "Organization verticals",
      "items": {
        "$ref": "#/definitions/i18nCodeWithParent"
      }
    },
    "Description": {
      "type": "object",
      "description": "Organization description",
      "properties": {
        "shortTeaserText": {
          "$ref": "#/definitions/i18nString"
        },
        "teaserText": {
          "$ref": "#/definitions/i18nString"
        },
        "promoTexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/i18nString"
          }
        }
      }
    },
    "payment": {
      "type": "object",
      "description": "Payment information.",
      "properties": {
        "externalId": {
          "type": "string",
          "description": "External payable ID"
        },
        "amount": {
          "type": "string",
          "description": "Amount to pay"
        },
        "creditCardInformation": {
          "type": "object",
          "properties": {
            "ccName": {
              "type": "string",
              "description": "Credit Card Name"
            },
            "ccNumber": {
              "type": "string",
              "description": "Credit Card Number"
            },
            "cvv": {
              "type": "string",
              "description": "Credit Card security number"
            },
            "expirationMonth": {
              "type": "string",
              "description": "Expiration Month"
            },
            "expirationYear": {
              "type": "string",
              "description": "Expiration Year"
            }
          }
        }
      }
    },
    "productResponse": {
      "properties": {
        "result": {
          "type": "boolean",
          "description": "true if is a valid response. "
        },
        "data": {
          "$ref": "#/definitions/product"
        }
      },
      "required": [
        "result",
        "data"
      ]
    },
    "leadResponse": {
      "properties": {
        "result": {
          "type": "boolean",
          "description": "true if is a valid response. "
        },
        "data": {
          "$ref": "#/definitions/leadResponse.data"
        }
      },
      "required": [
        "result",
        "data"
      ]
    },
    "leadResponse.data": {
      "properties": {
        "assigned": {
          "type": "array",
          "description": "Array of assigned leads. ",
          "items": {
            "$ref": "#/definitions/lead"
          }
        },
        "unassigned": {
          "type": "array",
          "description": "Array of unassigned leads. ",
          "items": {
            "$ref": "#/definitions/lead"
          }
        }
      },
      "required": [
        "assigned",
        "unassigned"
      ]
    },
    "response": {
      "properties": {
        "result": {
          "type": "boolean",
          "description": "true if is a valid response. "
        },
        "data": {
          "$ref": "#/definitions/response.data"
        }
      },
      "required": [
        "result",
        "data"
      ]
    },
    "response.data": {
      "type": "object",
      "title": "SalesRep",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "telephones": {
          "type": "array",
          "description": "List of telephone numbers",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "The telephone type. "
              },
              "value": {
                "type": "string",
                "description": "The telephone number. "
              }
            },
            "required": [
              "key",
              "value"
            ]
          }
        },
        "positions": {
          "type": "array",
          "description": "List of positions this salesrep has",
          "items": {
            "type": "object",
            "title": "Positions",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the position in salesforce"
              },
              "salesRegion": {
                "type": "string",
                "description": "The region of the position, usually a province"
              },
              "salesChannel": {
                "type": "string",
                "description": "a sales-rep specific term; for example Outbound Acquisition, or Diamond, or Premise"
              },
              "type": {
                "type": "string",
                "description": "Could be Manager or REP"
              }
            },
            "required": [
              "name",
              "salesRegion",
              "salesChannel",
              "type"
            ]
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "type",
        "name",
        "email"
      ]
    },
    "lead": {
      "type": "object",
      "title": "Lead",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "The MongoId of the YP Store Account attached to this lead. Could be empty."
        },
        "name": {
          "type": "string",
          "description": "Name of the lead. Could be `John` or `ABC Inc.`"
        },
        "telephone": {
          "type": "string",
          "format": "numeric"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "address": {
          "type": "object",
          "title": "Address",
          "properties": {
            "country": {
              "type": "string",
              "description": "The country, two-letter ISO 3166-1 alpha-2 country code (uppercase)"
            },
            "locality": {
              "type": "string",
              "description": "The locality (aka the city). For example, Montreal"
            },
            "region": {
              "type": "string",
              "description": "The region (aka the province), two-letter ISO 3166-2:CA (uppercase)"
            },
            "postOfficeBoxNumber": {
              "type": "string",
              "description": "The post office box number for PO box addresses"
            },
            "postalCode": {
              "type": "string",
              "description": "The postal code.  For example: H3E 2A5"
            },
            "streetAddress": {
              "type": "string",
              "description": "The street address. For example: 16 place du commerce"
            },
            "timezone": {
              "type": "object",
              "title": "Timezone",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The timezone name in full. For example: `Eastern Standard Time`."
                },
                "abbr": {
                  "type": "string",
                  "description": "The abbreviated timezone name. For example: `EST`."
                },
                "offset": {
                  "type": "number",
                  "description": "The offset from `UTC` time. Goes from `-12` to `12`. Can be a floating-point like `-3.5`."
                },
                "isdst": {
                  "type": "boolean",
                  "description": "If daylight savings time is applied to the timezone or not"
                },
                "timezone": {
                  "type": "string",
                  "description": "The full UTC timezone name. For example: `(UTC-05:00) Indiana (East)`"
                },
                "utc": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The UTC timezone name. For example `Asia/Calcutta`"
                  }
                }
              }
            },
            "geoCoordinate": {
              "type": "object",
              "title": "Point Coordinate",
              "description": "http://geojson.org/geojson-spec.html#point",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Value should always be `Point`"
                },
                "coordinates": {
                  "type": "array",
                  "description": "An Array of [longitude/latitude]",
                  "items": {
                    "type": "number",
                    "description": "A number representing a coordinate."
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              }
            }
          },
          "required": [
            "country",
            "locality",
            "region",
            "postalCode",
            "streetAddress"
          ]
        },
        "leadSource": {
          "type": "string",
          "description": "The name from which system this lead is a source."
        },
        "meta": {
          "type": "object",
          "properties": {
            "salesforce": {
              "type": "object",
              "properties": {
                "sfId": {
                  "type": "string",
                  "description": "The salesforce ID of this lead"
                },
                "signAuthId": {
                  "type": "string"
                },
                "positionNumber": {
                  "type": "string",
                  "description": "if the kittyId represents is a real person; it is referred to as a position"
                },
                "leadSource": {
                  "type": "string"
                },
                "salesChannel": {
                  "type": "string",
                  "description": "A salesforce term to categorize the lead: 'Diamond' or 'Premise' or 'Acquisition'"
                },
                "vertical": {
                  "type": "string",
                  "description": "A bilingual string: for example: 'Restaurant / Restaurant'"
                },
                "salesHeading": {
                  "type": "string",
                  "description": "A bilingual string: for example: 'Fireworks / Feux d'artifice'"
                },
                "salesRegion": {
                  "type": "string",
                  "description": "A province in Canada"
                },
                "servicingAccountId": {
                  "type": "string"
                },
                "contactId": {
                  "type": "string"
                },
                "ownerName": {
                  "type": "string"
                },
                "ownerPhone": {
                  "type": "string",
                  "format": "numeric"
                },
                "ownerEmail": {
                  "type": "string",
                  "format": "email"
                },
                "salesforceUrl": {
                  "type": "string",
                  "description": "This URL will open the lead's account in salesforce."
                }
              }
            }
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "name",
        "telephone"
      ]
    },
    "emailAddress": {
      "type": "string",
      "format": "email",
      "description": "an email address"
    },
    "email": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/emailAddress"
        },
        "fromName": {
          "type": "string"
        },
        "to": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/emailAddress"
          }
        },
        "replyTo": {
          "$ref": "#/definitions/emailAddress"
        },
        "cc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/emailAddress"
          }
        },
        "bcc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/emailAddress"
          }
        },
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "SearchResponse": {
      "description": "Search response",
      "required": [
        "eventSummaries",
        "total",
        "limit",
        "offset"
      ],
      "properties": {
        "eventSummaries": {
          "type": "array",
          "items": {
            "type": "object",
            "schema": {
              "$ref": "#/definitions/EventSummary"
            }
          }
        },
        "total": {
          "type": "number",
          "description": "total number of events returned by search"
        },
        "limit": {
          "type": "number",
          "description": "(requested) number of events per page"
        },
        "offset": {
          "type": "number",
          "description": "(requested) number of events to skip for pagination"
        }
      }
    },
    "EventSummary": {
      "required": [
        "platformId",
        "visitorId",
        "clientTimeStamp",
        "eventName",
        "eventType",
        "eventId"
      ],
      "description": "Summary of event payload that includes fields required by business",
      "properties": {
        "platformId": {
          "type": "string",
          "description": "platform id"
        },
        "visitorId": {
          "type": "string",
          "description": "visitor id"
        },
        "clientTimeStamp": {
          "type": "string",
          "description": "client time stamp"
        },
        "eventName": {
          "type": "string",
          "description": "event name"
        },
        "eventType": {
          "type": "string",
          "description": "event type"
        },
        "eventId": {
          "type": "string",
          "description": "event id"
        }
      }
    },
    "EventResponse": {
      "description": "Event payload that includes all details",
      "required": [
        "platformId",
        "visitorId",
        "eventId",
        "rawEvent"
      ],
      "properties": {
        "rawEvent": {
          "type": "object",
          "schema": {
            "$ref": "#/definitions/RawEvent"
          }
        },
        "platformId": {
          "type": "string",
          "description": "platform id"
        },
        "visitorId": {
          "type": "string",
          "description": "visitor id"
        },
        "eventId": {
          "type": "string",
          "description": "event id"
        }
      }
    },
    "RawEvent": {
      "properties": {
        "desc_client_timestamp": {
          "example": "string|integer",
          "description": "client time stamp in unix epoch format"
        },
        "desc_event_id": {
          "type": "string",
          "description": "event id"
        },
        "desc_event_name": {
          "type": "string",
          "description": "event name"
        },
        "desc_event_type": {
          "type": "string",
          "description": "event type (page_view|click)"
        },
        "desc_event_protocol": {
          "type": "string"
        },
        "desc_data_provider": {
          "type": "string"
        },
        "desc_ip_address": {
          "type": "string"
        },
        "desc_platform_id": {
          "type": "string",
          "description": "platform id"
        },
        "desc_server_timestamp": {
          "example": "integer",
          "description": "server time stamp in unix epoch format"
        },
        "desc_user_agent": {
          "type": "string",
          "description": "user agent"
        },
        "desc_visitor_id": {
          "type": "string",
          "description": "visitor id"
        },
        "raw_compression_format": {
          "type": "string"
        },
        "raw_data_checksum": {
          "type": "string"
        },
        "raw_encoding_format": {
          "type": "string"
        },
        "struct_data_schema_type": {
          "type": "string"
        },
        "struct_data_schema_version": {
          "type": "string"
        },
        "raw_data": {
          "type": "object",
          "properties": {
            "data_layer": {
              "description": "all variables defined for data layer",
              "type": "object",
              "example": {
                "pg_site": "string",
                "lk_product": "string",
                "se_what": "string",
                "se_where": "string",
                "pg_vertical": "string",
                "pg_subvertical": "string",
                "lk_what_ac_idx": "string",
                "lk_where_ac_idx": "string",
                "pg_busdetailsinfo": "string",
                "pg_name": "string",
                "pg_dealsinfo": "string",
                "pg_dealer_id": "string",
                "se_dealer_where": "string",
                "lk_listing_id": "string",
                "pg_searchtype": "string",
                "pg_lang": "string",
                "pg_category0": "string",
                "pg_category1": "string",
                "pg_category2": "string",
                "pg_category3": "string",
                "pg_category4": "string",
                "pg_category5": "string",
                "pg_category6": "string",
                "more_fields": "refer details at https://itwiki.ypg.com/display/YPDAD/L2S+Schema"
              }
            },
            "application": {
              "type": "object",
              "properties": {
                "applicationVersion": {
                  "type": "string"
                }
              }
            },
            "campaign": {
              "type": "object"
            },
            "device": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string"
                }
              }
            },
            "event": {
              "type": "object",
              "properties": {
                "pageUrl": {
                  "type": "string"
                },
                "pageReferrer": {
                  "type": "string"
                }
              }
            },
            "tag": {
              "type": "object"
            },
            "user": {
              "type": "object"
            }
          }
        }
      }
    },
    "Province": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The province code",
          "type": "string"
        },
        "label": {
          "description": "The province name",
          "type": "object",
          "properties": {
            "en": {
              "description": "The English province name",
              "type": "string"
            },
            "fr": {
              "description": "The French province name",
              "type": "string"
            }
          }
        }
      }
    },
    "Errors": {
      "type": "object",
      "properties": {
        "codes": {
          "type": "array",
          "items": {
            "type": "number",
            "description": "Error codes"
          }
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Error details",
            "properties": {
              "code": {
                "type": "number",
                "description": "Error code"
              },
              "message": {
                "type": "string",
                "description": "Error message"
              }
            }
          }
        }
      }
    },
    "fulfillmentContent": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string"
        }
      }
    },
    "productConfiguration": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string"
        },
        "heading": {
          "type": "string"
        }
      }
    },
    "OneCartDetailsByStore": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "totalPrice": {
          "type": "number"
        },
        "created": {
          "type": "number"
        },
        "modified": {
          "type": "number"
        },
        "stores": {
          "type": "object",
          "properties": {
            "storeName": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AddonDetails": {
      "type": "object",
      "properties": {
        "serial": {
          "description": "The addon serial number",
          "type": "string"
        },
        "udac": {
          "description": "The addon UDAC",
          "type": "string"
        },
        "title": {
          "description": "The addon title in required language (en or fr)",
          "type": "string"
        },
        "paymentType": {
          "description": "The type of payment. Can be 'monthly' or 'oneTime'.",
          "type": "string",
          "enum": [
            "monthly",
            "oneTime"
          ]
        },
        "multipleQuantity": {
          "description": "Flag that indicates if it supports a quantity.",
          "type": "string"
        }
      }
    },
    "AppliedTaxes": {
      "type": "object",
      "properties": {
        "province": {
          "description": "The province code",
          "type": "string"
        },
        "baseAmount": {
          "description": "The amount before taxes (in cents)",
          "type": "number"
        },
        "federalTaxes": {
          "description": "The computed federal taxes (in cents)",
          "type": "number"
        },
        "provincialTaxes": {
          "description": "The computed provincial taxes (in cents)",
          "type": "number"
        },
        "totalTaxes": {
          "description": "The total of all taxes (in cents)",
          "type": "number"
        },
        "totalPrice": {
          "description": "The final amount including all taxes (in cents)",
          "type": "number"
        }
      }
    },
    "VoiceSignatureLink": {
      "type": "object",
      "properties": {
        "voiceSignatureLink": {
          "description": "The link to the voice signature recording",
          "type": "string"
        }
      },
      "required": [
        "voiceSignatureLink"
      ]
    }
  },
  "securityDefinitions": {}
}